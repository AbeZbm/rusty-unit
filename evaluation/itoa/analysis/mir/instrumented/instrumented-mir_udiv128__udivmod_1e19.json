{"global_id":"udiv128__udivmod_1e19","cdg":"{\"nodes\":[42069,1,6,7,8,2,3,4,5,12,13,14,15,16,17,0,9,10,11],\"node_holes\":[],\"edge_property\":\"directed\",\"edges\":[[1,2,1],[1,3,1],[1,4,1],[1,5,1],[1,6,1],[1,7,1],[1,8,1],[9,10,1],[9,11,1],[9,12,1],[12,13,1],[12,14,1],[0,15,1],[0,1,1],[0,16,1],[0,17,1],[0,18,1],[0,9,1],[0,0,1]]}","cdg_dot":"digraph {\n    0 [ label = \"42069\" ]\n    1 [ label = \"1\" ]\n    2 [ label = \"6\" ]\n    3 [ label = \"7\" ]\n    4 [ label = \"8\" ]\n    5 [ label = \"2\" ]\n    6 [ label = \"3\" ]\n    7 [ label = \"4\" ]\n    8 [ label = \"5\" ]\n    9 [ label = \"12\" ]\n    10 [ label = \"13\" ]\n    11 [ label = \"14\" ]\n    12 [ label = \"15\" ]\n    13 [ label = \"16\" ]\n    14 [ label = \"17\" ]\n    15 [ label = \"0\" ]\n    16 [ label = \"9\" ]\n    17 [ label = \"10\" ]\n    18 [ label = \"11\" ]\n    1 -> 2 [ label = \"1\" ]\n    1 -> 3 [ label = \"1\" ]\n    1 -> 4 [ label = \"1\" ]\n    1 -> 5 [ label = \"1\" ]\n    1 -> 6 [ label = \"1\" ]\n    1 -> 7 [ label = \"1\" ]\n    1 -> 8 [ label = \"1\" ]\n    9 -> 10 [ label = \"1\" ]\n    9 -> 11 [ label = \"1\" ]\n    9 -> 12 [ label = \"1\" ]\n    12 -> 13 [ label = \"1\" ]\n    12 -> 14 [ label = \"1\" ]\n    0 -> 15 [ label = \"1\" ]\n    0 -> 1 [ label = \"1\" ]\n    0 -> 16 [ label = \"1\" ]\n    0 -> 17 [ label = \"1\" ]\n    0 -> 18 [ label = \"1\" ]\n    0 -> 9 [ label = \"1\" ]\n    0 -> 0 [ label = \"1\" ]\n}\n","cfg":"","truncated_cfg":"","constant_pool":[],"branches":0,"assertions":0,"locals":["_0 -> LocalDecl { mutability: Mut, local_info: Clear, ty: (u128, u64), user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:34:33: 34:44 (#0), scope: scope[0] } }","_1 -> LocalDecl { mutability: Not, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:34:21: 34:22 (#0), scope: scope[0] } }","_2 -> LocalDecl { mutability: Not, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:35:9: 35:10 (#0), scope: scope[0] } }","_3 -> LocalDecl { mutability: Not, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:37:9: 37:13 (#0), scope: scope[1] } }","_4 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:37:19: 37:30 (#0), scope: scope[0] } }","_5 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:37:23: 37:30 (#0), scope: scope[0] } }","_6 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:37:23: 37:30 (#0), scope: scope[0] } }","_7 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:37:23: 37:30 (#0), scope: scope[0] } }","_8 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:9: 38:39 (#0), scope: scope[0] } }","_9 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:10: 38:26 (#0), scope: scope[0] } }","_10 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:10: 38:19 (#0), scope: scope[0] } }","_11 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:10: 38:19 (#0), scope: scope[0] } }","_12 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:10: 38:19 (#0), scope: scope[0] } }","_13 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:29: 38:38 (#0), scope: scope[0] } }","_14 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:29: 38:38 (#0), scope: scope[0] } }","_15 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:29: 38:38 (#0), scope: scope[0] } }","_16 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:38:9: 38:39 (#0), scope: scope[0] } }","_17 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:40:9: 40:63 (#0), scope: scope[0] } }","_18 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:40:9: 40:69 (#0), scope: scope[0] } }","_19 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:40:9: 40:69 (#0), scope: scope[0] } }","_20 -> LocalDecl { mutability: Not, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:43:9: 43:12 (#0), scope: scope[2] } }","_21 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:43:15: 43:37 (#0), scope: scope[0] } }","_22 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:43:20: 43:36 (#0), scope: scope[0] } }","_23 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:43:20: 43:24 (#0), scope: scope[0] } }","_24 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:43:27: 43:36 (#0), scope: scope[0] } }","_25 -> LocalDecl { mutability: Mut, local_info: Clear, ty: (u128, bool), user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:43:20: 43:36 (#0), scope: scope[0] } }","_26 -> LocalDecl { mutability: Mut, local_info: Clear, ty: (u128, bool), user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:43:15: 43:37 (#0), scope: scope[0] } }","_27 -> LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} u128, &'{erased} u128), user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#49), scope: scope[0] } }","_28 -> LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16: 38:22 (#49), scope: scope[0] } }","_29 -> LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24: 38:31 (#49), scope: scope[0] } }","_30 -> LocalDecl { mutability: Not, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:44:28: 44:41 (#0), scope: scope[0] } }","_31 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:44:32: 44:41 (#0), scope: scope[0] } }","_32 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:44:28: 44:41 (#0), scope: scope[0] } }","_33 -> LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14: 39:22 (#49), scope: scope[3] } }","_34 -> LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24: 39:33 (#49), scope: scope[3] } }","_35 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#49), scope: scope[0] } }","_36 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22: 40:31 (#49), scope: scope[0] } }","_37 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35: 40:45 (#49), scope: scope[0] } }","_38 -> LocalDecl { mutability: Not, local_info: Clear, ty: core::panicking::AssertKind, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#49), scope: scope[4] } }","_39 -> LocalDecl { mutability: Not, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#49), scope: scope[0] } }","_40 -> LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<std::fmt::Arguments<'{erased}>>, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85: 45:113 (#49), scope: scope[0] } }","_41 -> LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} u128, &'{erased} u128), user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#52), scope: scope[0] } }","_42 -> LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16: 38:22 (#52), scope: scope[0] } }","_43 -> LocalDecl { mutability: Not, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:45:22: 45:33 (#0), scope: scope[0] } }","_44 -> LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24: 38:31 (#52), scope: scope[0] } }","_45 -> LocalDecl { mutability: Not, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:45:35: 45:48 (#0), scope: scope[0] } }","_46 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:45:39: 45:48 (#0), scope: scope[0] } }","_47 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:45:35: 45:48 (#0), scope: scope[0] } }","_48 -> LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14: 39:22 (#52), scope: scope[3] } }","_49 -> LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24: 39:33 (#52), scope: scope[3] } }","_50 -> LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#52), scope: scope[0] } }","_51 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22: 40:31 (#52), scope: scope[0] } }","_52 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35: 40:45 (#52), scope: scope[0] } }","_53 -> LocalDecl { mutability: Not, local_info: Clear, ty: core::panicking::AssertKind, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#52), scope: scope[6] } }","_54 -> LocalDecl { mutability: Not, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#52), scope: scope[0] } }","_55 -> LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<std::fmt::Arguments<'{erased}>>, user_ty: None, source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85: 45:113 (#52), scope: scope[0] } }","_56 -> LocalDecl { mutability: Mut, local_info: Clear, ty: u128, user_ty: None, source_info: SourceInfo { span: src/udiv128.rs:47:6: 47:10 (#0), scope: scope[0] } }","_57 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_58 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_59 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_60 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_61 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_62 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_63 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_64 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_65 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_66 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_67 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_68 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_69 -> LocalDecl { mutability: Mut, local_info: Set(Boring), ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }"],"basic_blocks":["0 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _69 = <ZST>: for<'a> fn(u64, &'a str) {rusty_monitor::trace_entry}(const 0_usize, const \"udiv128__udivmod_1e19\") -> [return: bb1, unwind continue] }), is_cleanup: false }","1 -> BasicBlockData { statements: [_2 = const 10000000000000000000_u64, _6 = const 83_i32 as u32 (IntToInt), _7 = Lt(move _6, const 128_u32)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:37:23: 37:30 (#0), scope: scope[1] }, kind: assert(move _7, \"attempt to shift left by `{}`, which would overflow\", const 83_i32) -> [success: bb19, unwind unreachable] }), is_cleanup: false }","2 -> BasicBlockData { statements: [_5 = Shl(const 1_u128, const 83_i32), _4 = Lt(_1, move _5)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:37:19: 37:30 (#0), scope: scope[1] }, kind: switchInt(move _4) -> [0: bb7, otherwise: bb3] }), is_cleanup: false }","3 -> BasicBlockData { statements: [_11 = const 19_i32 as u32 (IntToInt), _12 = Lt(move _11, const 128_u32)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:38:10: 38:19 (#0), scope: scope[1] }, kind: assert(move _12, \"attempt to shift right by `{}`, which would overflow\", const 19_i32) -> [success: bb20, unwind unreachable] }), is_cleanup: false }","4 -> BasicBlockData { statements: [_10 = Shr(_1, const 19_i32), _9 = move _10 as u64 (IntToInt), _14 = const 19_i32 as u32 (IntToInt), _15 = Lt(move _14, const 64_u32)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:38:29: 38:38 (#0), scope: scope[1] }, kind: assert(move _15, \"attempt to shift right by `{}`, which would overflow\", const 19_i32) -> [success: bb21, unwind unreachable] }), is_cleanup: false }","5 -> BasicBlockData { statements: [_13 = Shr(_2, const 19_i32), _16 = Eq(_13, const 0_u64)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:38:9: 38:39 (#0), scope: scope[1] }, kind: assert(!move _16, \"attempt to divide `{}` by zero\", _9) -> [success: bb22, unwind unreachable] }), is_cleanup: false }","6 -> BasicBlockData { statements: [_8 = Div(move _9, move _13), _3 = move _8 as u128 (IntToInt)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:37:16: 41:6 (#0), scope: scope[1] }, kind: goto -> bb23 }), is_cleanup: false }","7 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:40:9: 40:63 (#0), scope: scope[1] }, kind: _17 = udiv128::u128_mulhi(_1, const 156927543384667019095894735580191660403_u128) -> [return: bb24, unwind unreachable] }), is_cleanup: false }","8 -> BasicBlockData { statements: [_18 = const 62_i32 as u32 (IntToInt), _19 = Lt(move _18, const 128_u32)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:40:9: 40:69 (#0), scope: scope[1] }, kind: assert(move _19, \"attempt to shift right by `{}`, which would overflow\", const 62_i32) -> [success: bb25, unwind unreachable] }), is_cleanup: false }","9 -> BasicBlockData { statements: [_3 = Shr(move _17, const 62_i32)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:37:16: 41:6 (#0), scope: scope[1] }, kind: goto -> bb26 }), is_cleanup: false }","10 -> BasicBlockData { statements: [_23 = _3, _24 = _2 as u128 (IntToInt), _25 = MulWithOverflow(_23, _24)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:43:20: 43:36 (#0), scope: scope[2] }, kind: assert(!move (_25.1: bool), \"attempt to compute `{} * {}`, which would overflow\", move _23, move _24) -> [success: bb27, unwind unreachable] }), is_cleanup: false }","11 -> BasicBlockData { statements: [_22 = move (_25.0: u128), _26 = SubWithOverflow(_1, _22)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:43:15: 43:37 (#0), scope: scope[2] }, kind: assert(!move (_26.1: bool), \"attempt to compute `{} - {}`, which would overflow\", _1, move _22) -> [success: bb28, unwind unreachable] }), is_cleanup: false }","12 -> BasicBlockData { statements: [_21 = move (_26.0: u128), _20 = move _21 as u64 (IntToInt), _28 = &_3, _31 = _2 as u128 (IntToInt), _32 = Eq(_31, const 0_u128)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:44:28: 44:41 (#0), scope: scope[3] }, kind: assert(!move _32, \"attempt to divide `{}` by zero\", _1) -> [success: bb29, unwind unreachable] }), is_cleanup: false }","13 -> BasicBlockData { statements: [_30 = Div(_1, move _31), _29 = &_30, _27 = (move _28, move _29), _33 = (_27.0: &u128), _34 = (_27.1: &u128), _36 = (*_33), _37 = (*_34), _35 = Eq(move _36, move _37)], terminator: Some(Terminator { source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#49), scope: scope[4] }, kind: switchInt(move _35) -> [0: bb14, otherwise: bb15] }), is_cleanup: false }","14 -> BasicBlockData { statements: [_38 = core::panicking::AssertKind::Eq, _40 = std::option::Option::<std::fmt::Arguments<'_>>::None], terminator: Some(Terminator { source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#49), scope: scope[5] }, kind: _39 = core::panicking::assert_failed::<u128, u128>(move _38, _33, _34, move _40) -> unwind unreachable }), is_cleanup: false }","15 -> BasicBlockData { statements: [_43 = _20 as u128 (IntToInt), _42 = &_43, _46 = _2 as u128 (IntToInt), _47 = Eq(_46, const 0_u128)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:45:35: 45:48 (#0), scope: scope[3] }, kind: assert(!move _47, \"attempt to calculate the remainder of `{}` with a divisor of zero\", _1) -> [success: bb30, unwind unreachable] }), is_cleanup: false }","16 -> BasicBlockData { statements: [_45 = Rem(_1, move _46), _44 = &_45, _41 = (move _42, move _44), _48 = (_41.0: &u128), _49 = (_41.1: &u128), _51 = (*_48), _52 = (*_49), _50 = Eq(move _51, move _52)], terminator: Some(Terminator { source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#52), scope: scope[6] }, kind: switchInt(move _50) -> [0: bb17, otherwise: bb18] }), is_cleanup: false }","17 -> BasicBlockData { statements: [_53 = core::panicking::AssertKind::Eq, _55 = std::option::Option::<std::fmt::Arguments<'_>>::None], terminator: Some(Terminator { source_info: SourceInfo { span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#52), scope: scope[7] }, kind: _54 = core::panicking::assert_failed::<u128, u128>(move _53, _48, _49, move _55) -> unwind unreachable }), is_cleanup: false }","18 -> BasicBlockData { statements: [_56 = _3, _0 = (move _56, _20)], terminator: Some(Terminator { source_info: SourceInfo { span: src/udiv128.rs:48:2: 48:2 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }","19 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _57 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 1_usize) -> [return: bb2, unwind continue] }), is_cleanup: false }","20 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _58 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 3_usize) -> [return: bb4, unwind continue] }), is_cleanup: false }","21 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _59 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 4_usize) -> [return: bb5, unwind continue] }), is_cleanup: false }","22 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _60 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 5_usize) -> [return: bb6, unwind continue] }), is_cleanup: false }","23 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _61 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 9_usize) -> [return: bb10, unwind continue] }), is_cleanup: false }","24 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _62 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 7_usize) -> [return: bb8, unwind continue] }), is_cleanup: false }","25 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _63 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 8_usize) -> [return: bb9, unwind continue] }), is_cleanup: false }","26 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _64 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 9_usize) -> [return: bb10, unwind continue] }), is_cleanup: false }","27 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _65 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 10_usize) -> [return: bb11, unwind continue] }), is_cleanup: false }","28 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _66 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 11_usize) -> [return: bb12, unwind continue] }), is_cleanup: false }","29 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _67 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 12_usize) -> [return: bb13, unwind continue] }), is_cleanup: false }","30 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _68 = <ZST>: for<'a> fn(u64, &'a str, u64) {rusty_monitor::trace_branch_hit}(const 0_usize, const \"udiv128__udivmod_1e19\", const 15_usize) -> [return: bb16, unwind continue] }), is_cleanup: false }"]}