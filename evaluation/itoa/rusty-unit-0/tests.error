    Blocking waiting for file lock on build directory
    Checking libc v0.2.172
    Checking cfg-if v0.1.10
    Checking byteorder v1.5.0
    Checking log v0.4.27
    Checking futures v0.1.31
    Checking lazy_static v1.5.0
    Checking scopeguard v1.2.0
    Checking fnv v1.0.7
    Checking tinyvec_macros v0.1.1
    Checking maybe-uninit v2.0.0
    Checking slab v0.4.9
    Checking matches v0.1.10
    Checking unicode-bidi v0.3.18
    Checking void v1.0.2
    Checking percent-encoding v1.0.1
    Checking either v1.15.0
    Checking tinyvec v1.9.0
   Compiling ntest_proc_macro_helper v0.7.5
    Checking memchr v2.7.4
    Checking sha1_smol v1.0.1
    Checking lock_api v0.3.4
    Checking smallvec v0.6.14
    Checking crossbeam-utils v0.7.2
    Checking unreachable v1.0.0
    Checking ascii v0.9.3
   Compiling ntest_timeout v0.7.5
    Checking itoa v0.4.8
    Checking dtoa v0.4.8
    Checking sha1 v0.6.1
    Checking ntest v0.7.5
    Checking combine v3.8.1
    Checking iovec v0.1.4
    Checking net2 v0.2.39
    Checking parking_lot_core v0.6.3
    Checking num_cpus v1.16.0
    Checking bytes v0.4.12
    Checking parking_lot v0.9.0
    Checking mio v0.6.23
    Checking unicode-normalization v0.1.24
    Checking tokio-executor v0.1.10
    Checking tokio-sync v0.1.8
    Checking tokio-io v0.1.13
    Checking tokio-codec v0.1.2
    Checking tokio-reactor v0.1.12
    Checking mio-uds v0.6.8
    Checking idna v0.1.5
    Checking tokio-tcp v0.1.4
    Checking tokio-uds v0.2.7
    Checking url v1.7.2
    Checking redis v0.11.0
    Checking itoa v1.0.15 (/home/abezbm/rusty-unit/evaluation/itoa/rusty-unit-0)
error: Broken pipe (os error 32)
warning: build failed, waiting for other jobs to finish...
warning: unused imports: `Read` and `Write`
 --> src/rusty_monitor.rs:3:15
  |
3 | use std::io::{Read, Write};
  |               ^^^^  ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::str::from_utf8`
 --> src/rusty_monitor.rs:5:5
  |
5 | use std::str::from_utf8;
  |     ^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/rusty_monitor.rs:134:13
    |
134 |         let mut connection = client
    |             ----^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `switch_value`
   --> src/rusty_monitor.rs:157:87
    |
157 | pub(crate) fn trace_switch_value_with_var_bool(run: u64, global_id: &str, block: u64, switch_value: u64, var_value: u64, is_hit: bool) {
    |                                                                                       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_switch_value`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `var_value`
   --> src/rusty_monitor.rs:157:106
    |
157 | pub(crate) fn trace_switch_value_with_var_bool(run: u64, global_id: &str, block: u64, switch_value: u64, var_value: u64, is_hit: bool) {
    |                                                                                                          ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_var_value`

warning: unused variable: `global_id`
   --> src/rusty_monitor.rs:201:24
    |
201 | pub(crate) fn trace_op(global_id: &str, block: u64, op: BinaryOp, left: f64, right: f64, local: u64) {
    |                        ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_global_id`

warning: unused variable: `block`
   --> src/rusty_monitor.rs:201:41
    |
201 | pub(crate) fn trace_op(global_id: &str, block: u64, op: BinaryOp, left: f64, right: f64, local: u64) {
    |                                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_block`

warning: unused variable: `op`
   --> src/rusty_monitor.rs:201:53
    |
201 | pub(crate) fn trace_op(global_id: &str, block: u64, op: BinaryOp, left: f64, right: f64, local: u64) {
    |                                                     ^^ help: if this is intentional, prefix it with an underscore: `_op`

warning: unused variable: `left`
   --> src/rusty_monitor.rs:201:67
    |
201 | pub(crate) fn trace_op(global_id: &str, block: u64, op: BinaryOp, left: f64, right: f64, local: u64) {
    |                                                                   ^^^^ help: if this is intentional, prefix it with an underscore: `_left`

warning: unused variable: `right`
   --> src/rusty_monitor.rs:201:78
    |
201 | pub(crate) fn trace_op(global_id: &str, block: u64, op: BinaryOp, left: f64, right: f64, local: u64) {
    |                                                                              ^^^^^ help: if this is intentional, prefix it with an underscore: `_right`

warning: unused variable: `local`
   --> src/rusty_monitor.rs:201:90
    |
201 | pub(crate) fn trace_op(global_id: &str, block: u64, op: BinaryOp, left: f64, right: f64, local: u64) {
    |                                                                                          ^^^^^ help: if this is intentional, prefix it with an underscore: `_local`

warning: struct `Monitor` is never constructed
  --> src/rusty_monitor.rs:89:8
   |
89 | struct Monitor {
   |        ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `ROOT_BRANCH` is never used
  --> src/rusty_monitor.rs:95:7
   |
95 | const ROOT_BRANCH: &'static str = "{} root[{}, {}];";
   |       ^^^^^^^^^^^

warning: constant `BRANCH` is never used
  --> src/rusty_monitor.rs:96:7
   |
96 | const BRANCH: &'static str = "{} branch[{}, {}, {}];";
   |       ^^^^^^

warning: associated items `set_test_id`, `trace_fn`, `trace_branch`, `clear`, and `new` are never used
   --> src/rusty_monitor.rs:99:19
    |
98  | impl Monitor {
    | ------------ associated items in this implementation
99  |     pub(crate) fn set_test_id(&mut self, test_id: u64) {
    |                   ^^^^^^^^^^^
...
103 |     pub(crate) fn trace_fn(&mut self, run: u64, global_id: &str) {
    |                   ^^^^^^^^
...
113 |     pub(crate) fn trace_branch(&mut self, run: u64, global_id: &str, block: u64, dist: f64) {
    |                   ^^^^^^^^^^^^
...
123 |     fn clear(&self, connection: &mut Connection) {
    |        ^^^^^
...
130 |     fn new() -> Self {
    |        ^^^

warning: function `trace_entry` is never used
   --> src/rusty_monitor.rs:148:15
    |
148 | pub(crate) fn trace_entry(run: u64, global_id: &str) {
    |               ^^^^^^^^^^^

warning: function `trace_zero_or_one` is never used
   --> src/rusty_monitor.rs:152:15
    |
152 | pub(crate) fn trace_zero_or_one(run: u64, global_id: &str, block: u64, is_hit: bool) {
    |               ^^^^^^^^^^^^^^^^^

warning: function `trace_switch_value_with_var_bool` is never used
   --> src/rusty_monitor.rs:157:15
    |
157 | pub(crate) fn trace_switch_value_with_var_bool(run: u64, global_id: &str, block: u64, switch_value: u64, var_value: u64, is_hit: bool) {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `trace_switch_value_with_var_int` is never used
   --> src/rusty_monitor.rs:169:15
    |
169 | pub(crate) fn trace_switch_value_with_var_int(run: u64, global_id: &str, block: u64, switch_value: u64, var_value: u64, is_hit: bool) {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `trace_switch_value_with_var_char` is never used
   --> src/rusty_monitor.rs:185:15
    |
185 | pub(crate) fn trace_switch_value_with_var_char(run: u64, global_id: &str, block: u64, switch_value: u64, var_value: u64, is_hit: bool) {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `trace_op` is never used
   --> src/rusty_monitor.rs:201:15
    |
201 | pub(crate) fn trace_op(global_id: &str, block: u64, op: BinaryOp, left: f64, right: f64, local: u64) {
    |               ^^^^^^^^

warning: function `trace_branch_hit` is never used
   --> src/rusty_monitor.rs:205:15
    |
205 | pub(crate) fn trace_branch_hit(run: u64, global_id: &str, block: u64) {
    |               ^^^^^^^^^^^^^^^^

warning: function `trace_branch_bool` is never used
   --> src/rusty_monitor.rs:211:15
    |
211 | pub(crate) fn trace_branch_bool(
    |               ^^^^^^^^^^^^^^^^^

warning: function `distance` is never used
   --> src/rusty_monitor.rs:224:4
    |
224 | fn distance(left: f64, right: f64, op: BinaryOp, is_true_branch: bool) -> f64 {
    |    ^^^^^^^^

warning: function `set_test_id` is never used
   --> src/rusty_monitor.rs:291:15
    |
291 | pub(crate) fn set_test_id(id: u64) {
    |               ^^^^^^^^^^^

warning: `itoa` (lib) generated 25 warnings (run `cargo fix --lib -p itoa` to apply 3 suggestions)
unction `distance` is never used
   --> src/rusty_monitor.rs:224:4
    |
224 | fn distance(left: f64, right: f64, op: BinaryOp, is_true_branch: bool) -> f64 {
    |    ^^^^^^^^

warning: function `set_test_id` is never used
   --> src/rusty_monitor.rs:291:15
    |
291 | pub(crate) fn set_test_id(id: u64) {
    |               ^^^^^^^^^^^

warning: `itoa` (lib) generated 25 warnings (run `cargo fix --lib -p itoa` to apply 3 suggestions)
warning: unused variable: `u128_15`
  --> src/udiv128.rs:74:13
   |
74 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_0`
  --> src/udiv128.rs:75:13
   |
75 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_0`
  --> src/udiv128.rs:76:13
   |
76 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
   |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
  --> src/udiv128.rs:77:13
   |
77 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
   |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
  --> src/udiv128.rs:78:13
   |
78 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
   |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
  --> src/udiv128.rs:79:13
   |
79 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
   |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
  --> src/udiv128.rs:80:13
   |
80 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
   |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_16`
  --> src/udiv128.rs:81:13
   |
81 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `tuple_1`
  --> src/udiv128.rs:82:13
   |
82 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_17`
  --> src/udiv128.rs:83:13
   |
83 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
  --> src/udiv128.rs:84:13
   |
84 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_5`
  --> src/udiv128.rs:85:13
   |
85 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
   |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_19`
  --> src/udiv128.rs:86:13
   |
86 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `tuple_2`
  --> src/udiv128.rs:87:13
   |
87 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_20`
  --> src/udiv128.rs:88:13
   |
88 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: variable does not need to be mutable
  --> src/udiv128.rs:59:9
   |
59 |     let mut u128_0: u128 = 3084u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:60:9
   |
60 |     let mut u128_1: u128 = 7527u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:61:9
   |
61 |     let mut u128_2: u128 = 1016u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:62:9
   |
62 |     let mut u128_3: u128 = 9128u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:63:9
   |
63 |     let mut u128_4: u128 = 1765u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:64:9
   |
64 |     let mut u128_5: u128 = 6223u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:65:9
   |
65 |     let mut u128_6: u128 = 9871u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:66:9
   |
66 |     let mut u128_7: u128 = 9396u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:67:9
   |
67 |     let mut u128_8: u128 = 3383u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:68:9
   |
68 |     let mut u128_9: u128 = 9990u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:69:9
   |
69 |     let mut u128_10: u128 = 9194u128;
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:70:9
   |
70 |     let mut u128_11: u128 = 8577u128;
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:71:9
   |
71 |     let mut u128_12: u128 = 2518u128;
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:72:9
   |
72 |     let mut u128_13: u128 = 1686u128;
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:73:9
   |
73 |     let mut u128_14: u128 = 7393u128;
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:74:9
   |
74 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:75:9
   |
75 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:76:9
   |
76 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
   |         ----^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:77:9
   |
77 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
   |         ----^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:78:9
   |
78 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
   |         ----^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:79:9
   |
79 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
   |         ----^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:80:9
   |
80 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
   |         ----^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:81:9
   |
81 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:82:9
   |
82 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:83:9
   |
83 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:84:9
   |
84 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:85:9
   |
85 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
   |         ----^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:86:9
   |
86 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:87:9
   |
87 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:88:9
   |
88 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
   |         ----^^^^^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:113:13
    |
113 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:114:13
    |
114 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:115:13
    |
115 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:116:13
    |
116 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:117:13
    |
117 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:118:13
    |
118 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:119:13
    |
119 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:120:13
    |
120 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_19`
   --> src/udiv128.rs:121:13
    |
121 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:122:13
    |
122 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_20`
   --> src/udiv128.rs:123:13
    |
123 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:124:13
    |
124 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_21`
   --> src/udiv128.rs:125:13
    |
125 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:126:13
    |
126 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: variable does not need to be mutable
  --> src/udiv128.rs:97:9
   |
97 |     let mut u128_0: u128 = 338u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:98:9
   |
98 |     let mut u128_1: u128 = 8164u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src/udiv128.rs:99:9
   |
99 |     let mut u128_2: u128 = 1727u128;
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:100:9
    |
100 |     let mut u128_3: u128 = 962u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:101:9
    |
101 |     let mut u128_4: u128 = 944u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:102:9
    |
102 |     let mut u128_5: u128 = 7317u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:103:9
    |
103 |     let mut u128_6: u128 = 7802u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:104:9
    |
104 |     let mut u128_7: u128 = 2758u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:105:9
    |
105 |     let mut u128_8: u128 = 8137u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:106:9
    |
106 |     let mut u128_9: u128 = 9403u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:107:9
    |
107 |     let mut u128_10: u128 = 1840u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:108:9
    |
108 |     let mut u128_11: u128 = 7445u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:109:9
    |
109 |     let mut u128_12: u128 = 686u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:110:9
    |
110 |     let mut u128_13: u128 = 7177u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:111:9
    |
111 |     let mut u128_14: u128 = 686u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:112:9
    |
112 |     let mut u128_15: u128 = 8969u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:113:9
    |
113 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:114:9
    |
114 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:115:9
    |
115 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:116:9
    |
116 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:117:9
    |
117 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:118:9
    |
118 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:119:9
    |
119 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:120:9
    |
120 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:121:9
    |
121 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:122:9
    |
122 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:123:9
    |
123 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:124:9
    |
124 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:125:9
    |
125 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:126:9
    |
126 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:146:13
    |
146 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:147:13
    |
147 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_11`
   --> src/udiv128.rs:148:13
    |
148 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:149:13
    |
149 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:150:13
    |
150 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:151:13
    |
151 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:152:13
    |
152 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:153:13
    |
153 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:154:13
    |
154 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:155:13
    |
155 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:156:13
    |
156 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:157:13
    |
157 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:158:13
    |
158 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:159:13
    |
159 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:160:13
    |
160 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:161:13
    |
161 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_10`
   --> src/udiv128.rs:162:13
    |
162 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
   --> src/udiv128.rs:163:13
    |
163 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:164:13
    |
164 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: variable does not need to be mutable
   --> src/udiv128.rs:135:9
    |
135 |     let mut u128_0: u128 = 312u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:136:9
    |
136 |     let mut u128_1: u128 = 3260u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:137:9
    |
137 |     let mut u128_2: u128 = 2658u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:138:9
    |
138 |     let mut u128_3: u128 = 8730u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:139:9
    |
139 |     let mut u128_4: u128 = 2281u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:140:9
    |
140 |     let mut u128_5: u128 = 4818u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:141:9
    |
141 |     let mut u128_6: u128 = 8777u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:142:9
    |
142 |     let mut u128_7: u128 = 4616u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:143:9
    |
143 |     let mut u128_8: u128 = 6738u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:144:9
    |
144 |     let mut u128_9: u128 = 5653u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:145:9
    |
145 |     let mut u128_10: u128 = 380u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:146:9
    |
146 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:147:9
    |
147 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:148:9
    |
148 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:149:9
    |
149 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:150:9
    |
150 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:151:9
    |
151 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:152:9
    |
152 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:153:9
    |
153 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:154:9
    |
154 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:155:9
    |
155 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:156:9
    |
156 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:157:9
    |
157 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:158:9
    |
158 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:159:9
    |
159 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:160:9
    |
160 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:161:9
    |
161 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:162:9
    |
162 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:163:9
    |
163 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:164:9
    |
164 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:182:13
    |
182 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_9`
   --> src/udiv128.rs:183:13
    |
183 |     let mut u128_9: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_9`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:184:13
    |
184 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:185:13
    |
185 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_10`
   --> src/udiv128.rs:186:13
    |
186 |     let mut u128_10: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_10`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:187:13
    |
187 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:188:13
    |
188 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:189:13
    |
189 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:190:13
    |
190 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:191:13
    |
191 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:192:13
    |
192 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:193:13
    |
193 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
   --> src/udiv128.rs:194:13
    |
194 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
   --> src/udiv128.rs:195:13
    |
195 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: unused variable: `buffer_12`
   --> src/udiv128.rs:196:13
    |
196 |     let mut buffer_12: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_12`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:197:13
    |
197 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_13`
   --> src/udiv128.rs:198:13
    |
198 |     let mut buffer_13: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_13`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:199:13
    |
199 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_14`
   --> src/udiv128.rs:200:13
    |
200 |     let mut buffer_14: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_14`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:201:13
    |
201 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_11`
   --> src/udiv128.rs:202:13
    |
202 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: variable does not need to be mutable
   --> src/udiv128.rs:173:9
    |
173 |     let mut u128_0: u128 = 4051u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:174:9
    |
174 |     let mut u128_1: u128 = 4135u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:175:9
    |
175 |     let mut u128_2: u128 = 1188u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:176:9
    |
176 |     let mut u128_3: u128 = 4696u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:177:9
    |
177 |     let mut u128_4: u128 = 116u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:178:9
    |
178 |     let mut u128_5: u128 = 1772u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:179:9
    |
179 |     let mut u128_6: u128 = 3434u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:180:9
    |
180 |     let mut u128_7: u128 = 7473u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:181:9
    |
181 |     let mut u128_8: u128 = 1693u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:182:9
    |
182 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:183:9
    |
183 |     let mut u128_9: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:184:9
    |
184 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:185:9
    |
185 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:186:9
    |
186 |     let mut u128_10: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:187:9
    |
187 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:188:9
    |
188 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:189:9
    |
189 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:190:9
    |
190 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:191:9
    |
191 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:192:9
    |
192 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:193:9
    |
193 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:194:9
    |
194 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:195:9
    |
195 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:196:9
    |
196 |     let mut buffer_12: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:197:9
    |
197 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:198:9
    |
198 |     let mut buffer_13: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:199:9
    |
199 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:200:9
    |
200 |     let mut buffer_14: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:201:9
    |
201 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:202:9
    |
202 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:223:13
    |
223 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:224:13
    |
224 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:225:13
    |
225 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:226:13
    |
226 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:227:13
    |
227 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:228:13
    |
228 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:229:13
    |
229 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:230:13
    |
230 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:231:13
    |
231 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:232:13
    |
232 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:233:13
    |
233 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:234:13
    |
234 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `tuple_4`
   --> src/udiv128.rs:235:13
    |
235 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `tuple_5`
   --> src/udiv128.rs:236:13
    |
236 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `tuple_6`
   --> src/udiv128.rs:237:13
    |
237 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:238:13
    |
238 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:239:13
    |
239 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:240:13
    |
240 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_7`
   --> src/udiv128.rs:241:13
    |
241 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_7`

warning: variable does not need to be mutable
   --> src/udiv128.rs:211:9
    |
211 |     let mut u128_0: u128 = 5064u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:212:9
    |
212 |     let mut u128_1: u128 = 6205u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:213:9
    |
213 |     let mut u128_2: u128 = 6434u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:214:9
    |
214 |     let mut u128_3: u128 = 8057u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:215:9
    |
215 |     let mut u128_4: u128 = 8526u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:216:9
    |
216 |     let mut u128_5: u128 = 4586u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:217:9
    |
217 |     let mut u128_6: u128 = 470u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:218:9
    |
218 |     let mut u128_7: u128 = 8780u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:219:9
    |
219 |     let mut u128_8: u128 = 8841u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:220:9
    |
220 |     let mut u128_9: u128 = 5290u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:221:9
    |
221 |     let mut u128_10: u128 = 148u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:222:9
    |
222 |     let mut u128_11: u128 = 3372u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:223:9
    |
223 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:224:9
    |
224 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:225:9
    |
225 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:226:9
    |
226 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:227:9
    |
227 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:228:9
    |
228 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:229:9
    |
229 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:230:9
    |
230 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:231:9
    |
231 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:232:9
    |
232 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:233:9
    |
233 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:234:9
    |
234 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:235:9
    |
235 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:236:9
    |
236 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:237:9
    |
237 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:238:9
    |
238 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:239:9
    |
239 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:240:9
    |
240 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:241:9
    |
241 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:263:13
    |
263 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:264:13
    |
264 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:265:13
    |
265 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:266:13
    |
266 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:267:13
    |
267 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:268:13
    |
268 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:269:13
    |
269 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:270:13
    |
270 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:271:13
    |
271 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:272:13
    |
272 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:273:13
    |
273 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:274:13
    |
274 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:275:13
    |
275 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:276:13
    |
276 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:277:13
    |
277 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:278:13
    |
278 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:279:13
    |
279 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_4`
   --> src/udiv128.rs:280:13
    |
280 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: variable does not need to be mutable
   --> src/udiv128.rs:250:9
    |
250 |     let mut u128_0: u128 = 1699u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:251:9
    |
251 |     let mut u128_1: u128 = 7247u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:252:9
    |
252 |     let mut u128_2: u128 = 710u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:253:9
    |
253 |     let mut u128_3: u128 = 1087u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:254:9
    |
254 |     let mut u128_4: u128 = 6758u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:255:9
    |
255 |     let mut u128_5: u128 = 5935u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:256:9
    |
256 |     let mut u128_6: u128 = 5289u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:257:9
    |
257 |     let mut u128_7: u128 = 397u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:258:9
    |
258 |     let mut u128_8: u128 = 2232u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:259:9
    |
259 |     let mut u128_9: u128 = 9316u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:260:9
    |
260 |     let mut u128_10: u128 = 6383u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:261:9
    |
261 |     let mut u128_11: u128 = 4173u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:262:9
    |
262 |     let mut u128_12: u128 = 83u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:263:9
    |
263 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:264:9
    |
264 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:265:9
    |
265 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:266:9
    |
266 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:267:9
    |
267 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:268:9
    |
268 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:269:9
    |
269 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:270:9
    |
270 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:271:9
    |
271 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:272:9
    |
272 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:273:9
    |
273 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:274:9
    |
274 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:275:9
    |
275 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:276:9
    |
276 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:277:9
    |
277 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:278:9
    |
278 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:279:9
    |
279 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:280:9
    |
280 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:304:13
    |
304 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:305:13
    |
305 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:306:13
    |
306 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:307:13
    |
307 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:308:13
    |
308 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:309:13
    |
309 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:310:13
    |
310 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:311:13
    |
311 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:312:13
    |
312 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:313:13
    |
313 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:314:13
    |
314 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:315:13
    |
315 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:316:13
    |
316 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:317:13
    |
317 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_19`
   --> src/udiv128.rs:318:13
    |
318 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:319:13
    |
319 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_20`
   --> src/udiv128.rs:320:13
    |
320 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: variable does not need to be mutable
   --> src/udiv128.rs:289:9
    |
289 |     let mut u128_0: u128 = 7666u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:290:9
    |
290 |     let mut u128_1: u128 = 8864u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:291:9
    |
291 |     let mut u128_2: u128 = 6921u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:292:9
    |
292 |     let mut u128_3: u128 = 5047u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:293:9
    |
293 |     let mut u128_4: u128 = 6921u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:294:9
    |
294 |     let mut u128_5: u128 = 4708u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:295:9
    |
295 |     let mut u128_6: u128 = 8928u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:296:9
    |
296 |     let mut u128_7: u128 = 6443u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:297:9
    |
297 |     let mut u128_8: u128 = 7518u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:298:9
    |
298 |     let mut u128_9: u128 = 3300u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:299:9
    |
299 |     let mut u128_10: u128 = 8243u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:300:9
    |
300 |     let mut u128_11: u128 = 755u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:301:9
    |
301 |     let mut u128_12: u128 = 7757u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:302:9
    |
302 |     let mut u128_13: u128 = 6499u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:303:9
    |
303 |     let mut u128_14: u128 = 6359u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:304:9
    |
304 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:305:9
    |
305 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:306:9
    |
306 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:307:9
    |
307 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:308:9
    |
308 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:309:9
    |
309 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:310:9
    |
310 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:311:9
    |
311 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:312:9
    |
312 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:313:9
    |
313 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:314:9
    |
314 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:315:9
    |
315 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:316:9
    |
316 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:317:9
    |
317 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:318:9
    |
318 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:319:9
    |
319 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:320:9
    |
320 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:345:13
    |
345 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:346:13
    |
346 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:347:13
    |
347 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:348:13
    |
348 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_15);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:349:13
    |
349 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:350:13
    |
350 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:351:13
    |
351 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:352:13
    |
352 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:353:13
    |
353 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:354:13
    |
354 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_19`
   --> src/udiv128.rs:355:13
    |
355 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:356:13
    |
356 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:357:13
    |
357 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:358:13
    |
358 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `u128_20`
   --> src/udiv128.rs:359:13
    |
359 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `u128_21`
   --> src/udiv128.rs:360:13
    |
360 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: variable does not need to be mutable
   --> src/udiv128.rs:329:9
    |
329 |     let mut u128_0: u128 = 3581u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:330:9
    |
330 |     let mut u128_1: u128 = 9115u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:331:9
    |
331 |     let mut u128_2: u128 = 2944u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:332:9
    |
332 |     let mut u128_3: u128 = 4079u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:333:9
    |
333 |     let mut u128_4: u128 = 8983u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:334:9
    |
334 |     let mut u128_5: u128 = 382u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:335:9
    |
335 |     let mut u128_6: u128 = 3573u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:336:9
    |
336 |     let mut u128_7: u128 = 3760u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:337:9
    |
337 |     let mut u128_8: u128 = 1918u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:338:9
    |
338 |     let mut u128_9: u128 = 4935u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:339:9
    |
339 |     let mut u128_10: u128 = 8083u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:340:9
    |
340 |     let mut u128_11: u128 = 5079u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:341:9
    |
341 |     let mut u128_12: u128 = 1094u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:342:9
    |
342 |     let mut u128_13: u128 = 8556u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:343:9
    |
343 |     let mut u128_14: u128 = 3170u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:344:9
    |
344 |     let mut u128_15: u128 = 905u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:345:9
    |
345 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:346:9
    |
346 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:347:9
    |
347 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:348:9
    |
348 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_15);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:349:9
    |
349 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:350:9
    |
350 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:351:9
    |
351 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:352:9
    |
352 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:353:9
    |
353 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:354:9
    |
354 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:355:9
    |
355 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:356:9
    |
356 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:357:9
    |
357 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:358:9
    |
358 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:359:9
    |
359 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:360:9
    |
360 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:386:13
    |
386 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_16);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:387:13
    |
387 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:388:13
    |
388 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:389:13
    |
389 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_19`
   --> src/udiv128.rs:390:13
    |
390 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:391:13
    |
391 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:392:13
    |
392 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:393:13
    |
393 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:394:13
    |
394 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_20`
   --> src/udiv128.rs:395:13
    |
395 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `u128_21`
   --> src/udiv128.rs:396:13
    |
396 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: unused variable: `u128_22`
   --> src/udiv128.rs:397:13
    |
397 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_22`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:398:13
    |
398 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_4`
   --> src/udiv128.rs:399:13
    |
399 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: variable does not need to be mutable
   --> src/udiv128.rs:369:9
    |
369 |     let mut u128_0: u128 = 9347u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:370:9
    |
370 |     let mut u128_1: u128 = 6467u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:371:9
    |
371 |     let mut u128_2: u128 = 1488u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:372:9
    |
372 |     let mut u128_3: u128 = 3730u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:373:9
    |
373 |     let mut u128_4: u128 = 487u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:374:9
    |
374 |     let mut u128_5: u128 = 1298u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:375:9
    |
375 |     let mut u128_6: u128 = 3443u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:376:9
    |
376 |     let mut u128_7: u128 = 3451u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:377:9
    |
377 |     let mut u128_8: u128 = 9510u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:378:9
    |
378 |     let mut u128_9: u128 = 4231u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:379:9
    |
379 |     let mut u128_10: u128 = 8860u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:380:9
    |
380 |     let mut u128_11: u128 = 8538u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:381:9
    |
381 |     let mut u128_12: u128 = 8470u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:382:9
    |
382 |     let mut u128_13: u128 = 4883u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:383:9
    |
383 |     let mut u128_14: u128 = 2181u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:384:9
    |
384 |     let mut u128_15: u128 = 4261u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:385:9
    |
385 |     let mut u128_16: u128 = 4572u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:386:9
    |
386 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_16);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:387:9
    |
387 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:388:9
    |
388 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:389:9
    |
389 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:390:9
    |
390 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:391:9
    |
391 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:392:9
    |
392 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:393:9
    |
393 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:394:9
    |
394 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:395:9
    |
395 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:396:9
    |
396 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:397:9
    |
397 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:398:9
    |
398 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:399:9
    |
399 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `u128_11`
   --> src/udiv128.rs:419:13
    |
419 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:420:13
    |
420 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:421:13
    |
421 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:422:13
    |
422 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:423:13
    |
423 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:424:13
    |
424 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:425:13
    |
425 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:426:13
    |
426 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:427:13
    |
427 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:428:13
    |
428 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:429:13
    |
429 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:430:13
    |
430 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:431:13
    |
431 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:432:13
    |
432 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:433:13
    |
433 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:434:13
    |
434 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:435:13
    |
435 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_10`
   --> src/udiv128.rs:436:13
    |
436 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
   --> src/udiv128.rs:437:13
    |
437 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: variable does not need to be mutable
   --> src/udiv128.rs:408:9
    |
408 |     let mut u128_0: u128 = 3708u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:409:9
    |
409 |     let mut u128_1: u128 = 9372u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:410:9
    |
410 |     let mut u128_2: u128 = 4671u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:411:9
    |
411 |     let mut u128_3: u128 = 7706u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:412:9
    |
412 |     let mut u128_4: u128 = 9208u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:413:9
    |
413 |     let mut u128_5: u128 = 5490u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:414:9
    |
414 |     let mut u128_6: u128 = 5000u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:415:9
    |
415 |     let mut u128_7: u128 = 3755u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:416:9
    |
416 |     let mut u128_8: u128 = 5598u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:417:9
    |
417 |     let mut u128_9: u128 = 5407u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:418:9
    |
418 |     let mut u128_10: u128 = 2969u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:419:9
    |
419 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:420:9
    |
420 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:421:9
    |
421 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:422:9
    |
422 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:423:9
    |
423 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:424:9
    |
424 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:425:9
    |
425 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:426:9
    |
426 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:427:9
    |
427 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:428:9
    |
428 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:429:9
    |
429 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:430:9
    |
430 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:431:9
    |
431 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:432:9
    |
432 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:433:9
    |
433 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:434:9
    |
434 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:435:9
    |
435 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:436:9
    |
436 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:437:9
    |
437 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:457:13
    |
457 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:458:13
    |
458 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:459:13
    |
459 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:460:13
    |
460 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:461:13
    |
461 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:462:13
    |
462 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:463:13
    |
463 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:464:13
    |
464 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:465:13
    |
465 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:466:13
    |
466 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:467:13
    |
467 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:468:13
    |
468 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `tuple_4`
   --> src/udiv128.rs:469:13
    |
469 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:470:13
    |
470 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `u128_11`
   --> src/udiv128.rs:471:13
    |
471 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:472:13
    |
472 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `tuple_5`
   --> src/udiv128.rs:473:13
    |
473 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `tuple_6`
   --> src/udiv128.rs:474:13
    |
474 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:475:13
    |
475 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: variable does not need to be mutable
   --> src/udiv128.rs:446:9
    |
446 |     let mut u128_0: u128 = 7415u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:447:9
    |
447 |     let mut u128_1: u128 = 4200u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:448:9
    |
448 |     let mut u128_2: u128 = 1644u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:449:9
    |
449 |     let mut u128_3: u128 = 7871u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:450:9
    |
450 |     let mut u128_4: u128 = 2173u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:451:9
    |
451 |     let mut u128_5: u128 = 7450u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:452:9
    |
452 |     let mut u128_6: u128 = 7471u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:453:9
    |
453 |     let mut u128_7: u128 = 4179u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:454:9
    |
454 |     let mut u128_8: u128 = 5696u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:455:9
    |
455 |     let mut u128_9: u128 = 2932u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:456:9
    |
456 |     let mut u128_10: u128 = 9710u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:457:9
    |
457 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:458:9
    |
458 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:459:9
    |
459 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:460:9
    |
460 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:461:9
    |
461 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:462:9
    |
462 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:463:9
    |
463 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:464:9
    |
464 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:465:9
    |
465 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:466:9
    |
466 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:467:9
    |
467 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:468:9
    |
468 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:469:9
    |
469 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:470:9
    |
470 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:471:9
    |
471 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:472:9
    |
472 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:473:9
    |
473 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:474:9
    |
474 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:475:9
    |
475 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:498:13
    |
498 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:499:13
    |
499 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:500:13
    |
500 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:501:13
    |
501 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:502:13
    |
502 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:503:13
    |
503 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:504:13
    |
504 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:505:13
    |
505 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:506:13
    |
506 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:507:13
    |
507 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:508:13
    |
508 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:509:13
    |
509 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:510:13
    |
510 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:511:13
    |
511 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:512:13
    |
512 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:513:13
    |
513 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:514:13
    |
514 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: variable does not need to be mutable
   --> src/udiv128.rs:484:9
    |
484 |     let mut u128_0: u128 = 7631u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:485:9
    |
485 |     let mut u128_1: u128 = 8558u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:486:9
    |
486 |     let mut u128_2: u128 = 8913u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:487:9
    |
487 |     let mut u128_3: u128 = 7097u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:488:9
    |
488 |     let mut u128_4: u128 = 57u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:489:9
    |
489 |     let mut u128_5: u128 = 6911u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:490:9
    |
490 |     let mut u128_6: u128 = 9526u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:491:9
    |
491 |     let mut u128_7: u128 = 7243u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:492:9
    |
492 |     let mut u128_8: u128 = 3611u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:493:9
    |
493 |     let mut u128_9: u128 = 9626u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:494:9
    |
494 |     let mut u128_10: u128 = 2964u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:495:9
    |
495 |     let mut u128_11: u128 = 2126u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:496:9
    |
496 |     let mut u128_12: u128 = 9369u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:497:9
    |
497 |     let mut u128_13: u128 = 7299u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:498:9
    |
498 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:499:9
    |
499 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:500:9
    |
500 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:501:9
    |
501 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:502:9
    |
502 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:503:9
    |
503 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:504:9
    |
504 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:505:9
    |
505 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:506:9
    |
506 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:507:9
    |
507 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:508:9
    |
508 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:509:9
    |
509 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:510:9
    |
510 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:511:9
    |
511 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:512:9
    |
512 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:513:9
    |
513 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:514:9
    |
514 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:535:13
    |
535 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:536:13
    |
536 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:537:13
    |
537 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:538:13
    |
538 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:539:13
    |
539 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `tuple_4`
   --> src/udiv128.rs:540:13
    |
540 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:541:13
    |
541 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_5`
   --> src/udiv128.rs:542:13
    |
542 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:543:13
    |
543 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:544:13
    |
544 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:545:13
    |
545 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:546:13
    |
546 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:547:13
    |
547 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:548:13
    |
548 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `tuple_6`
   --> src/udiv128.rs:549:13
    |
549 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `tuple_7`
   --> src/udiv128.rs:550:13
    |
550 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_7`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:551:13
    |
551 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:552:13
    |
552 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: variable does not need to be mutable
   --> src/udiv128.rs:523:9
    |
523 |     let mut u128_0: u128 = 729u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:524:9
    |
524 |     let mut u128_1: u128 = 7355u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:525:9
    |
525 |     let mut u128_2: u128 = 2551u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:526:9
    |
526 |     let mut u128_3: u128 = 9200u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:527:9
    |
527 |     let mut u128_4: u128 = 5882u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:528:9
    |
528 |     let mut u128_5: u128 = 8412u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:529:9
    |
529 |     let mut u128_6: u128 = 5794u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:530:9
    |
530 |     let mut u128_7: u128 = 716u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:531:9
    |
531 |     let mut u128_8: u128 = 4955u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:532:9
    |
532 |     let mut u128_9: u128 = 9300u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:533:9
    |
533 |     let mut u128_10: u128 = 2061u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:534:9
    |
534 |     let mut u128_11: u128 = 8395u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:535:9
    |
535 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:536:9
    |
536 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:537:9
    |
537 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:538:9
    |
538 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:539:9
    |
539 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:540:9
    |
540 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:541:9
    |
541 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:542:9
    |
542 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:543:9
    |
543 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:544:9
    |
544 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:545:9
    |
545 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:546:9
    |
546 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:547:9
    |
547 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:548:9
    |
548 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:549:9
    |
549 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:550:9
    |
550 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:551:9
    |
551 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:552:9
    |
552 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:576:13
    |
576 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:577:13
    |
577 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:578:13
    |
578 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:579:13
    |
579 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:580:13
    |
580 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:581:13
    |
581 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:582:13
    |
582 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:583:13
    |
583 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:584:13
    |
584 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:585:13
    |
585 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:586:13
    |
586 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:587:13
    |
587 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:588:13
    |
588 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:589:13
    |
589 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:590:13
    |
590 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_19`
   --> src/udiv128.rs:591:13
    |
591 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `u128_20`
   --> src/udiv128.rs:592:13
    |
592 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: variable does not need to be mutable
   --> src/udiv128.rs:561:9
    |
561 |     let mut u128_0: u128 = 5159u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:562:9
    |
562 |     let mut u128_1: u128 = 8582u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:563:9
    |
563 |     let mut u128_2: u128 = 2227u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:564:9
    |
564 |     let mut u128_3: u128 = 6303u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:565:9
    |
565 |     let mut u128_4: u128 = 9497u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:566:9
    |
566 |     let mut u128_5: u128 = 8030u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:567:9
    |
567 |     let mut u128_6: u128 = 3261u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:568:9
    |
568 |     let mut u128_7: u128 = 7101u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:569:9
    |
569 |     let mut u128_8: u128 = 8853u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:570:9
    |
570 |     let mut u128_9: u128 = 9058u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:571:9
    |
571 |     let mut u128_10: u128 = 435u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:572:9
    |
572 |     let mut u128_11: u128 = 8972u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:573:9
    |
573 |     let mut u128_12: u128 = 8529u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:574:9
    |
574 |     let mut u128_13: u128 = 1810u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:575:9
    |
575 |     let mut u128_14: u128 = 7603u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:576:9
    |
576 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:577:9
    |
577 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:578:9
    |
578 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:579:9
    |
579 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:580:9
    |
580 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:581:9
    |
581 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:582:9
    |
582 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:583:9
    |
583 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:584:9
    |
584 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:585:9
    |
585 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:586:9
    |
586 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:587:9
    |
587 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:588:9
    |
588 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:589:9
    |
589 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:590:9
    |
590 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:591:9
    |
591 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:592:9
    |
592 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:615:13
    |
615 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:616:13
    |
616 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:617:13
    |
617 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:618:13
    |
618 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:619:13
    |
619 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:620:13
    |
620 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:621:13
    |
621 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:622:13
    |
622 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:623:13
    |
623 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:624:13
    |
624 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:625:13
    |
625 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:626:13
    |
626 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:627:13
    |
627 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:628:13
    |
628 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:629:13
    |
629 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:630:13
    |
630 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: variable does not need to be mutable
   --> src/udiv128.rs:601:9
    |
601 |     let mut u128_0: u128 = 9112u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:602:9
    |
602 |     let mut u128_1: u128 = 6375u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:603:9
    |
603 |     let mut u128_2: u128 = 8957u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:604:9
    |
604 |     let mut u128_3: u128 = 5943u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:605:9
    |
605 |     let mut u128_4: u128 = 6097u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:606:9
    |
606 |     let mut u128_5: u128 = 8326u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:607:9
    |
607 |     let mut u128_6: u128 = 7516u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:608:9
    |
608 |     let mut u128_7: u128 = 8641u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:609:9
    |
609 |     let mut u128_8: u128 = 6820u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:610:9
    |
610 |     let mut u128_9: u128 = 9605u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:611:9
    |
611 |     let mut u128_10: u128 = 9505u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:612:9
    |
612 |     let mut u128_11: u128 = 4613u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:613:9
    |
613 |     let mut u128_12: u128 = 1702u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:614:9
    |
614 |     let mut u128_13: u128 = 7652u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:615:9
    |
615 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:616:9
    |
616 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:617:9
    |
617 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:618:9
    |
618 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:619:9
    |
619 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:620:9
    |
620 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:621:9
    |
621 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:622:9
    |
622 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:623:9
    |
623 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:624:9
    |
624 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:625:9
    |
625 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:626:9
    |
626 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:627:9
    |
627 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:628:9
    |
628 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:629:9
    |
629 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:630:9
    |
630 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:650:13
    |
650 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:651:13
    |
651 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:652:13
    |
652 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:653:13
    |
653 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:654:13
    |
654 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_11`
   --> src/udiv128.rs:655:13
    |
655 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:656:13
    |
656 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:657:13
    |
657 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:658:13
    |
658 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:659:13
    |
659 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:660:13
    |
660 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:661:13
    |
661 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:662:13
    |
662 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:663:13
    |
663 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:664:13
    |
664 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:665:13
    |
665 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:666:13
    |
666 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
   --> src/udiv128.rs:667:13
    |
667 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
   --> src/udiv128.rs:668:13
    |
668 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: variable does not need to be mutable
   --> src/udiv128.rs:639:9
    |
639 |     let mut u128_0: u128 = 678u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:640:9
    |
640 |     let mut u128_1: u128 = 9515u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:641:9
    |
641 |     let mut u128_2: u128 = 2922u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:642:9
    |
642 |     let mut u128_3: u128 = 6544u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:643:9
    |
643 |     let mut u128_4: u128 = 5400u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:644:9
    |
644 |     let mut u128_5: u128 = 4575u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:645:9
    |
645 |     let mut u128_6: u128 = 5335u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:646:9
    |
646 |     let mut u128_7: u128 = 5474u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:647:9
    |
647 |     let mut u128_8: u128 = 6428u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:648:9
    |
648 |     let mut u128_9: u128 = 5791u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:649:9
    |
649 |     let mut u128_10: u128 = 5603u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:650:9
    |
650 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:651:9
    |
651 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:652:9
    |
652 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:653:9
    |
653 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:654:9
    |
654 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:655:9
    |
655 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:656:9
    |
656 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:657:9
    |
657 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:658:9
    |
658 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:659:9
    |
659 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:660:9
    |
660 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:661:9
    |
661 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:662:9
    |
662 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:663:9
    |
663 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:664:9
    |
664 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:665:9
    |
665 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:666:9
    |
666 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:667:9
    |
667 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:668:9
    |
668 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:692:13
    |
692 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:693:13
    |
693 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:694:13
    |
694 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:695:13
    |
695 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:696:13
    |
696 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:697:13
    |
697 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:698:13
    |
698 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:699:13
    |
699 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:700:13
    |
700 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_4`
   --> src/udiv128.rs:701:13
    |
701 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:702:13
    |
702 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:703:13
    |
703 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_5`
   --> src/udiv128.rs:704:13
    |
704 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:705:13
    |
705 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_6`
   --> src/udiv128.rs:706:13
    |
706 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:707:13
    |
707 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: variable does not need to be mutable
   --> src/udiv128.rs:677:9
    |
677 |     let mut u128_0: u128 = 6896u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:678:9
    |
678 |     let mut u128_1: u128 = 4422u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:679:9
    |
679 |     let mut u128_2: u128 = 9607u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:680:9
    |
680 |     let mut u128_3: u128 = 879u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:681:9
    |
681 |     let mut u128_4: u128 = 2025u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:682:9
    |
682 |     let mut u128_5: u128 = 6229u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:683:9
    |
683 |     let mut u128_6: u128 = 9376u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:684:9
    |
684 |     let mut u128_7: u128 = 5912u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:685:9
    |
685 |     let mut u128_8: u128 = 6280u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:686:9
    |
686 |     let mut u128_9: u128 = 7166u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:687:9
    |
687 |     let mut u128_10: u128 = 3062u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:688:9
    |
688 |     let mut u128_11: u128 = 4161u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:689:9
    |
689 |     let mut u128_12: u128 = 1070u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:690:9
    |
690 |     let mut u128_13: u128 = 7958u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:691:9
    |
691 |     let mut u128_14: u128 = 8333u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:692:9
    |
692 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:693:9
    |
693 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:694:9
    |
694 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:695:9
    |
695 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:696:9
    |
696 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:697:9
    |
697 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:698:9
    |
698 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:699:9
    |
699 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:700:9
    |
700 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:701:9
    |
701 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:702:9
    |
702 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:703:9
    |
703 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:704:9
    |
704 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:705:9
    |
705 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:706:9
    |
706 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:707:9
    |
707 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:730:13
    |
730 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:731:13
    |
731 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:732:13
    |
732 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:733:13
    |
733 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:734:13
    |
734 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:735:13
    |
735 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:736:13
    |
736 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:737:13
    |
737 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:738:13
    |
738 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:739:13
    |
739 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:740:13
    |
740 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:741:13
    |
741 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:742:13
    |
742 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:743:13
    |
743 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:744:13
    |
744 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:745:13
    |
745 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:746:13
    |
746 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: variable does not need to be mutable
   --> src/udiv128.rs:716:9
    |
716 |     let mut u128_0: u128 = 3287u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:717:9
    |
717 |     let mut u128_1: u128 = 155u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:718:9
    |
718 |     let mut u128_2: u128 = 2755u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:719:9
    |
719 |     let mut u128_3: u128 = 507u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:720:9
    |
720 |     let mut u128_4: u128 = 2429u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:721:9
    |
721 |     let mut u128_5: u128 = 8250u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:722:9
    |
722 |     let mut u128_6: u128 = 8942u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:723:9
    |
723 |     let mut u128_7: u128 = 6473u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:724:9
    |
724 |     let mut u128_8: u128 = 7540u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:725:9
    |
725 |     let mut u128_9: u128 = 7617u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:726:9
    |
726 |     let mut u128_10: u128 = 2329u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:727:9
    |
727 |     let mut u128_11: u128 = 566u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:728:9
    |
728 |     let mut u128_12: u128 = 8579u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:729:9
    |
729 |     let mut u128_13: u128 = 3010u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:730:9
    |
730 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:731:9
    |
731 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:732:9
    |
732 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:733:9
    |
733 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:734:9
    |
734 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:735:9
    |
735 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:736:9
    |
736 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:737:9
    |
737 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:738:9
    |
738 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:739:9
    |
739 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:740:9
    |
740 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:741:9
    |
741 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:742:9
    |
742 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:743:9
    |
743 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:744:9
    |
744 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:745:9
    |
745 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:746:9
    |
746 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:770:13
    |
770 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:771:13
    |
771 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:772:13
    |
772 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:773:13
    |
773 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:774:13
    |
774 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:775:13
    |
775 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:776:13
    |
776 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_19`
   --> src/udiv128.rs:777:13
    |
777 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:778:13
    |
778 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:779:13
    |
779 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:780:13
    |
780 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:781:13
    |
781 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:782:13
    |
782 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:783:13
    |
783 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:784:13
    |
784 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_20`
   --> src/udiv128.rs:785:13
    |
785 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: variable does not need to be mutable
   --> src/udiv128.rs:755:9
    |
755 |     let mut u128_0: u128 = 7811u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:756:9
    |
756 |     let mut u128_1: u128 = 5307u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:757:9
    |
757 |     let mut u128_2: u128 = 6218u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:758:9
    |
758 |     let mut u128_3: u128 = 4303u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:759:9
    |
759 |     let mut u128_4: u128 = 4484u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:760:9
    |
760 |     let mut u128_5: u128 = 5480u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:761:9
    |
761 |     let mut u128_6: u128 = 6018u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:762:9
    |
762 |     let mut u128_7: u128 = 4834u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:763:9
    |
763 |     let mut u128_8: u128 = 2988u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:764:9
    |
764 |     let mut u128_9: u128 = 7675u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:765:9
    |
765 |     let mut u128_10: u128 = 4495u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:766:9
    |
766 |     let mut u128_11: u128 = 257u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:767:9
    |
767 |     let mut u128_12: u128 = 9618u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:768:9
    |
768 |     let mut u128_13: u128 = 5814u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:769:9
    |
769 |     let mut u128_14: u128 = 5780u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:770:9
    |
770 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:771:9
    |
771 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:772:9
    |
772 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:773:9
    |
773 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:774:9
    |
774 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:775:9
    |
775 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:776:9
    |
776 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:777:9
    |
777 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:778:9
    |
778 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:779:9
    |
779 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:780:9
    |
780 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:781:9
    |
781 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:782:9
    |
782 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:783:9
    |
783 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:784:9
    |
784 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:785:9
    |
785 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:808:13
    |
808 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:809:13
    |
809 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:810:13
    |
810 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:811:13
    |
811 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:812:13
    |
812 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:813:13
    |
813 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:814:13
    |
814 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:815:13
    |
815 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:816:13
    |
816 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:817:13
    |
817 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:818:13
    |
818 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:819:13
    |
819 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:820:13
    |
820 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:821:13
    |
821 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:822:13
    |
822 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:823:13
    |
823 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: variable does not need to be mutable
   --> src/udiv128.rs:794:9
    |
794 |     let mut u128_0: u128 = 6766u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:795:9
    |
795 |     let mut u128_1: u128 = 3794u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:796:9
    |
796 |     let mut u128_2: u128 = 4248u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:797:9
    |
797 |     let mut u128_3: u128 = 3071u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:798:9
    |
798 |     let mut u128_4: u128 = 4104u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:799:9
    |
799 |     let mut u128_5: u128 = 4810u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:800:9
    |
800 |     let mut u128_6: u128 = 489u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:801:9
    |
801 |     let mut u128_7: u128 = 592u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:802:9
    |
802 |     let mut u128_8: u128 = 5781u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:803:9
    |
803 |     let mut u128_9: u128 = 2115u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:804:9
    |
804 |     let mut u128_10: u128 = 6527u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:805:9
    |
805 |     let mut u128_11: u128 = 9843u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:806:9
    |
806 |     let mut u128_12: u128 = 3273u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:807:9
    |
807 |     let mut u128_13: u128 = 9348u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:808:9
    |
808 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:809:9
    |
809 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:810:9
    |
810 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:811:9
    |
811 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:812:9
    |
812 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:813:9
    |
813 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:814:9
    |
814 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:815:9
    |
815 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:816:9
    |
816 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:817:9
    |
817 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:818:9
    |
818 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:819:9
    |
819 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:820:9
    |
820 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:821:9
    |
821 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:822:9
    |
822 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:823:9
    |
823 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:845:13
    |
845 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:846:13
    |
846 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:847:13
    |
847 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:848:13
    |
848 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:849:13
    |
849 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:850:13
    |
850 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:851:13
    |
851 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:852:13
    |
852 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:853:13
    |
853 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:854:13
    |
854 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:855:13
    |
855 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:856:13
    |
856 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:857:13
    |
857 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:858:13
    |
858 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:859:13
    |
859 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:860:13
    |
860 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:861:13
    |
861 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: variable does not need to be mutable
   --> src/udiv128.rs:832:9
    |
832 |     let mut u128_0: u128 = 8773u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:833:9
    |
833 |     let mut u128_1: u128 = 4870u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:834:9
    |
834 |     let mut u128_2: u128 = 4163u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:835:9
    |
835 |     let mut u128_3: u128 = 7627u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:836:9
    |
836 |     let mut u128_4: u128 = 170u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:837:9
    |
837 |     let mut u128_5: u128 = 8831u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:838:9
    |
838 |     let mut u128_6: u128 = 2907u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:839:9
    |
839 |     let mut u128_7: u128 = 8148u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:840:9
    |
840 |     let mut u128_8: u128 = 1744u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:841:9
    |
841 |     let mut u128_9: u128 = 611u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:842:9
    |
842 |     let mut u128_10: u128 = 6405u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:843:9
    |
843 |     let mut u128_11: u128 = 3371u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:844:9
    |
844 |     let mut u128_12: u128 = 9233u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:845:9
    |
845 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:846:9
    |
846 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:847:9
    |
847 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:848:9
    |
848 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:849:9
    |
849 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:850:9
    |
850 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:851:9
    |
851 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:852:9
    |
852 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:853:9
    |
853 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:854:9
    |
854 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:855:9
    |
855 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:856:9
    |
856 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:857:9
    |
857 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:858:9
    |
858 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:859:9
    |
859 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:860:9
    |
860 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:861:9
    |
861 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:881:13
    |
881 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:882:13
    |
882 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:883:13
    |
883 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_11`
   --> src/udiv128.rs:884:13
    |
884 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:885:13
    |
885 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:886:13
    |
886 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:887:13
    |
887 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:888:13
    |
888 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:889:13
    |
889 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:890:13
    |
890 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:891:13
    |
891 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_4`
   --> src/udiv128.rs:892:13
    |
892 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:893:13
    |
893 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:894:13
    |
894 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:895:13
    |
895 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:896:13
    |
896 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_5`
   --> src/udiv128.rs:897:13
    |
897 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:898:13
    |
898 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `tuple_6`
   --> src/udiv128.rs:899:13
    |
899 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: variable does not need to be mutable
   --> src/udiv128.rs:870:9
    |
870 |     let mut u128_0: u128 = 3561u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:871:9
    |
871 |     let mut u128_1: u128 = 4692u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:872:9
    |
872 |     let mut u128_2: u128 = 194u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:873:9
    |
873 |     let mut u128_3: u128 = 9657u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:874:9
    |
874 |     let mut u128_4: u128 = 1130u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:875:9
    |
875 |     let mut u128_5: u128 = 1155u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:876:9
    |
876 |     let mut u128_6: u128 = 8847u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:877:9
    |
877 |     let mut u128_7: u128 = 615u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:878:9
    |
878 |     let mut u128_8: u128 = 7102u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:879:9
    |
879 |     let mut u128_9: u128 = 5843u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:880:9
    |
880 |     let mut u128_10: u128 = 7233u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:881:9
    |
881 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:882:9
    |
882 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:883:9
    |
883 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:884:9
    |
884 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:885:9
    |
885 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:886:9
    |
886 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:887:9
    |
887 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:888:9
    |
888 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:889:9
    |
889 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:890:9
    |
890 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:891:9
    |
891 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:892:9
    |
892 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:893:9
    |
893 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:894:9
    |
894 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:895:9
    |
895 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:896:9
    |
896 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:897:9
    |
897 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:898:9
    |
898 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:899:9
    |
899 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:921:13
    |
921 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:922:13
    |
922 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:923:13
    |
923 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:924:13
    |
924 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:925:13
    |
925 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:926:13
    |
926 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:927:13
    |
927 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:928:13
    |
928 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:929:13
    |
929 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:930:13
    |
930 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:931:13
    |
931 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:932:13
    |
932 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:933:13
    |
933 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:934:13
    |
934 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
   --> src/udiv128.rs:935:13
    |
935 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `u128_16`
   --> src/udiv128.rs:936:13
    |
936 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
   --> src/udiv128.rs:937:13
    |
937 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_11`
   --> src/udiv128.rs:938:13
    |
938 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: unused variable: `u128_18`
   --> src/udiv128.rs:939:13
    |
939 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: variable does not need to be mutable
   --> src/udiv128.rs:908:9
    |
908 |     let mut u128_0: u128 = 8100u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:909:9
    |
909 |     let mut u128_1: u128 = 4254u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:910:9
    |
910 |     let mut u128_2: u128 = 2455u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:911:9
    |
911 |     let mut u128_3: u128 = 7289u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:912:9
    |
912 |     let mut u128_4: u128 = 9062u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:913:9
    |
913 |     let mut u128_5: u128 = 3452u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:914:9
    |
914 |     let mut u128_6: u128 = 4231u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:915:9
    |
915 |     let mut u128_7: u128 = 5042u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:916:9
    |
916 |     let mut u128_8: u128 = 900u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:917:9
    |
917 |     let mut u128_9: u128 = 396u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:918:9
    |
918 |     let mut u128_10: u128 = 8639u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:919:9
    |
919 |     let mut u128_11: u128 = 1541u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:920:9
    |
920 |     let mut u128_12: u128 = 8504u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:921:9
    |
921 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:922:9
    |
922 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:923:9
    |
923 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:924:9
    |
924 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:925:9
    |
925 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:926:9
    |
926 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:927:9
    |
927 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:928:9
    |
928 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:929:9
    |
929 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:930:9
    |
930 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:931:9
    |
931 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:932:9
    |
932 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:933:9
    |
933 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:934:9
    |
934 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:935:9
    |
935 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:936:9
    |
936 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:937:9
    |
937 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:938:9
    |
938 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:939:9
    |
939 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
   --> src/udiv128.rs:960:13
    |
960 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
   --> src/udiv128.rs:961:13
    |
961 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
   --> src/udiv128.rs:962:13
    |
962 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_12`
   --> src/udiv128.rs:963:13
    |
963 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_3`
   --> src/udiv128.rs:964:13
    |
964 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_13`
   --> src/udiv128.rs:965:13
    |
965 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_4`
   --> src/udiv128.rs:966:13
    |
966 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
   --> src/udiv128.rs:967:13
    |
967 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_0`
   --> src/udiv128.rs:968:13
    |
968 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_14`
   --> src/udiv128.rs:969:13
    |
969 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_6`
   --> src/udiv128.rs:970:13
    |
970 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
   --> src/udiv128.rs:971:13
    |
971 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
   --> src/udiv128.rs:972:13
    |
972 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_1`
   --> src/udiv128.rs:973:13
    |
973 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
   --> src/udiv128.rs:974:13
    |
974 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_15`
   --> src/udiv128.rs:975:13
    |
975 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_9`
   --> src/udiv128.rs:976:13
    |
976 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
   --> src/udiv128.rs:977:13
    |
977 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `tuple_3`
   --> src/udiv128.rs:978:13
    |
978 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: variable does not need to be mutable
   --> src/udiv128.rs:948:9
    |
948 |     let mut u128_0: u128 = 8507u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:949:9
    |
949 |     let mut u128_1: u128 = 8565u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:950:9
    |
950 |     let mut u128_2: u128 = 8862u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:951:9
    |
951 |     let mut u128_3: u128 = 5312u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:952:9
    |
952 |     let mut u128_4: u128 = 8044u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:953:9
    |
953 |     let mut u128_5: u128 = 7211u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:954:9
    |
954 |     let mut u128_6: u128 = 147u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:955:9
    |
955 |     let mut u128_7: u128 = 571u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:956:9
    |
956 |     let mut u128_8: u128 = 5947u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:957:9
    |
957 |     let mut u128_9: u128 = 8002u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:958:9
    |
958 |     let mut u128_10: u128 = 6732u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:959:9
    |
959 |     let mut u128_11: u128 = 1458u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:960:9
    |
960 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:961:9
    |
961 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:962:9
    |
962 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:963:9
    |
963 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:964:9
    |
964 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:965:9
    |
965 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:966:9
    |
966 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:967:9
    |
967 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:968:9
    |
968 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:969:9
    |
969 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:970:9
    |
970 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:971:9
    |
971 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:972:9
    |
972 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:973:9
    |
973 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:974:9
    |
974 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:975:9
    |
975 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:976:9
    |
976 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:977:9
    |
977 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:978:9
    |
978 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1002:13
     |
1002 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1003:13
     |
1003 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1004:13
     |
1004 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1005:13
     |
1005 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1006:13
     |
1006 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1007:13
     |
1007 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1008:13
     |
1008 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1009:13
     |
1009 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1010:13
     |
1010 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1011:13
     |
1011 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1012:13
     |
1012 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1013:13
     |
1013 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1014:13
     |
1014 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `tuple_6`
    --> src/udiv128.rs:1015:13
     |
1015 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `tuple_7`
    --> src/udiv128.rs:1016:13
     |
1016 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_7`

warning: unused variable: `tuple_8`
    --> src/udiv128.rs:1017:13
     |
1017 |     let mut tuple_8: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_8`

warning: variable does not need to be mutable
   --> src/udiv128.rs:987:9
    |
987 |     let mut u128_0: u128 = 4894u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:988:9
    |
988 |     let mut u128_1: u128 = 5882u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:989:9
    |
989 |     let mut u128_2: u128 = 4695u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:990:9
    |
990 |     let mut u128_3: u128 = 2330u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:991:9
    |
991 |     let mut u128_4: u128 = 4951u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:992:9
    |
992 |     let mut u128_5: u128 = 3547u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:993:9
    |
993 |     let mut u128_6: u128 = 1199u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:994:9
    |
994 |     let mut u128_7: u128 = 4693u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:995:9
    |
995 |     let mut u128_8: u128 = 3146u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:996:9
    |
996 |     let mut u128_9: u128 = 5162u128;
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:997:9
    |
997 |     let mut u128_10: u128 = 2701u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:998:9
    |
998 |     let mut u128_11: u128 = 7919u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/udiv128.rs:999:9
    |
999 |     let mut u128_12: u128 = 8430u128;
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1000:9
     |
1000 |     let mut u128_13: u128 = 5377u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1001:9
     |
1001 |     let mut u128_14: u128 = 2858u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1002:9
     |
1002 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1003:9
     |
1003 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1004:9
     |
1004 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1005:9
     |
1005 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1006:9
     |
1006 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1007:9
     |
1007 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1008:9
     |
1008 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1009:9
     |
1009 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1010:9
     |
1010 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1011:9
     |
1011 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1012:9
     |
1012 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1013:9
     |
1013 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1014:9
     |
1014 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1015:9
     |
1015 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1016:9
     |
1016 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1017:9
     |
1017 |     let mut tuple_8: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1043:13
     |
1043 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1044:13
     |
1044 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1045:13
     |
1045 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1046:13
     |
1046 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `u128_20`
    --> src/udiv128.rs:1047:13
     |
1047 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1048:13
     |
1048 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1049:13
     |
1049 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_21`
    --> src/udiv128.rs:1050:13
     |
1050 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1051:13
     |
1051 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1052:13
     |
1052 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_22`
    --> src/udiv128.rs:1053:13
     |
1053 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_22`

warning: unused variable: `u128_23`
    --> src/udiv128.rs:1054:13
     |
1054 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_23`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1055:13
     |
1055 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1056:13
     |
1056 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_24`
    --> src/udiv128.rs:1057:13
     |
1057 |     let mut u128_24: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_24`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1026:9
     |
1026 |     let mut u128_0: u128 = 2423u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1027:9
     |
1027 |     let mut u128_1: u128 = 1531u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1028:9
     |
1028 |     let mut u128_2: u128 = 5862u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1029:9
     |
1029 |     let mut u128_3: u128 = 5199u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1030:9
     |
1030 |     let mut u128_4: u128 = 5509u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1031:9
     |
1031 |     let mut u128_5: u128 = 8805u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1032:9
     |
1032 |     let mut u128_6: u128 = 9964u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1033:9
     |
1033 |     let mut u128_7: u128 = 1845u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1034:9
     |
1034 |     let mut u128_8: u128 = 3784u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1035:9
     |
1035 |     let mut u128_9: u128 = 8914u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1036:9
     |
1036 |     let mut u128_10: u128 = 2018u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1037:9
     |
1037 |     let mut u128_11: u128 = 118u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1038:9
     |
1038 |     let mut u128_12: u128 = 6524u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1039:9
     |
1039 |     let mut u128_13: u128 = 6349u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1040:9
     |
1040 |     let mut u128_14: u128 = 1688u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1041:9
     |
1041 |     let mut u128_15: u128 = 1485u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1042:9
     |
1042 |     let mut u128_16: u128 = 4827u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1043:9
     |
1043 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1044:9
     |
1044 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1045:9
     |
1045 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1046:9
     |
1046 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1047:9
     |
1047 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1048:9
     |
1048 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1049:9
     |
1049 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1050:9
     |
1050 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1051:9
     |
1051 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1052:9
     |
1052 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1053:9
     |
1053 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1054:9
     |
1054 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1055:9
     |
1055 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1056:9
     |
1056 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1057:9
     |
1057 |     let mut u128_24: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1081:13
     |
1081 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1082:13
     |
1082 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1083:13
     |
1083 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1084:13
     |
1084 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1085:13
     |
1085 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1086:13
     |
1086 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1087:13
     |
1087 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1088:13
     |
1088 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1089:13
     |
1089 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1090:13
     |
1090 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1091:13
     |
1091 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1092:13
     |
1092 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1093:13
     |
1093 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1094:13
     |
1094 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1095:13
     |
1095 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1096:13
     |
1096 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1097:13
     |
1097 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1066:9
     |
1066 |     let mut u128_0: u128 = 8579u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1067:9
     |
1067 |     let mut u128_1: u128 = 3967u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1068:9
     |
1068 |     let mut u128_2: u128 = 8147u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1069:9
     |
1069 |     let mut u128_3: u128 = 5417u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1070:9
     |
1070 |     let mut u128_4: u128 = 3218u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1071:9
     |
1071 |     let mut u128_5: u128 = 8333u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1072:9
     |
1072 |     let mut u128_6: u128 = 5515u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1073:9
     |
1073 |     let mut u128_7: u128 = 5231u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1074:9
     |
1074 |     let mut u128_8: u128 = 436u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1075:9
     |
1075 |     let mut u128_9: u128 = 3873u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1076:9
     |
1076 |     let mut u128_10: u128 = 4934u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1077:9
     |
1077 |     let mut u128_11: u128 = 3063u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1078:9
     |
1078 |     let mut u128_12: u128 = 1744u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1079:9
     |
1079 |     let mut u128_13: u128 = 7995u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1080:9
     |
1080 |     let mut u128_14: u128 = 7731u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1081:9
     |
1081 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1082:9
     |
1082 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1083:9
     |
1083 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1084:9
     |
1084 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1085:9
     |
1085 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1086:9
     |
1086 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1087:9
     |
1087 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1088:9
     |
1088 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1089:9
     |
1089 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1090:9
     |
1090 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1091:9
     |
1091 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1092:9
     |
1092 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1093:9
     |
1093 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1094:9
     |
1094 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1095:9
     |
1095 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1096:9
     |
1096 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1097:9
     |
1097 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1117:13
     |
1117 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1118:13
     |
1118 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1119:13
     |
1119 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_11`
    --> src/udiv128.rs:1120:13
     |
1120 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1121:13
     |
1121 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1122:13
     |
1122 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1123:13
     |
1123 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1124:13
     |
1124 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1125:13
     |
1125 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_12`
    --> src/udiv128.rs:1126:13
     |
1126 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1127:13
     |
1127 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1128:13
     |
1128 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1129:13
     |
1129 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1130:13
     |
1130 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1131:13
     |
1131 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1132:13
     |
1132 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1133:13
     |
1133 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
    --> src/udiv128.rs:1134:13
     |
1134 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
    --> src/udiv128.rs:1135:13
     |
1135 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1106:9
     |
1106 |     let mut u128_0: u128 = 4973u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1107:9
     |
1107 |     let mut u128_1: u128 = 7754u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1108:9
     |
1108 |     let mut u128_2: u128 = 3709u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1109:9
     |
1109 |     let mut u128_3: u128 = 6534u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1110:9
     |
1110 |     let mut u128_4: u128 = 4118u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1111:9
     |
1111 |     let mut u128_5: u128 = 6977u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1112:9
     |
1112 |     let mut u128_6: u128 = 4749u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1113:9
     |
1113 |     let mut u128_7: u128 = 3136u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1114:9
     |
1114 |     let mut u128_8: u128 = 8886u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1115:9
     |
1115 |     let mut u128_9: u128 = 5425u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1116:9
     |
1116 |     let mut u128_10: u128 = 2366u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1117:9
     |
1117 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1118:9
     |
1118 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1119:9
     |
1119 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1120:9
     |
1120 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1121:9
     |
1121 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1122:9
     |
1122 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1123:9
     |
1123 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1124:9
     |
1124 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1125:9
     |
1125 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1126:9
     |
1126 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1127:9
     |
1127 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1128:9
     |
1128 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1129:9
     |
1129 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1130:9
     |
1130 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1131:9
     |
1131 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1132:9
     |
1132 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1133:9
     |
1133 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1134:9
     |
1134 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1135:9
     |
1135 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `u128_11`
    --> src/udiv128.rs:1155:13
     |
1155 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `u128_12`
    --> src/udiv128.rs:1156:13
     |
1156 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1157:13
     |
1157 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1158:13
     |
1158 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1159:13
     |
1159 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1160:13
     |
1160 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1161:13
     |
1161 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1162:13
     |
1162 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1163:13
     |
1163 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1164:13
     |
1164 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1165:13
     |
1165 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1166:13
     |
1166 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1167:13
     |
1167 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1168:13
     |
1168 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1169:13
     |
1169 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1170:13
     |
1170 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
    --> src/udiv128.rs:1171:13
     |
1171 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
    --> src/udiv128.rs:1172:13
     |
1172 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1173:13
     |
1173 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1144:9
     |
1144 |     let mut u128_0: u128 = 5457u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1145:9
     |
1145 |     let mut u128_1: u128 = 7754u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1146:9
     |
1146 |     let mut u128_2: u128 = 884u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1147:9
     |
1147 |     let mut u128_3: u128 = 2743u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1148:9
     |
1148 |     let mut u128_4: u128 = 2056u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1149:9
     |
1149 |     let mut u128_5: u128 = 1640u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1150:9
     |
1150 |     let mut u128_6: u128 = 9706u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1151:9
     |
1151 |     let mut u128_7: u128 = 2692u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1152:9
     |
1152 |     let mut u128_8: u128 = 4442u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1153:9
     |
1153 |     let mut u128_9: u128 = 8471u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1154:9
     |
1154 |     let mut u128_10: u128 = 4848u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1155:9
     |
1155 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1156:9
     |
1156 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1157:9
     |
1157 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1158:9
     |
1158 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1159:9
     |
1159 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1160:9
     |
1160 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1161:9
     |
1161 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1162:9
     |
1162 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1163:9
     |
1163 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1164:9
     |
1164 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1165:9
     |
1165 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1166:9
     |
1166 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1167:9
     |
1167 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1168:9
     |
1168 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1169:9
     |
1169 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1170:9
     |
1170 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1171:9
     |
1171 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1172:9
     |
1172 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1173:9
     |
1173 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1195:13
     |
1195 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1196:13
     |
1196 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1197:13
     |
1197 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1198:13
     |
1198 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1199:13
     |
1199 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1200:13
     |
1200 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1201:13
     |
1201 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1202:13
     |
1202 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1203:13
     |
1203 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1204:13
     |
1204 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1205:13
     |
1205 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1206:13
     |
1206 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1207:13
     |
1207 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1208:13
     |
1208 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1209:13
     |
1209 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1210:13
     |
1210 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1211:13
     |
1211 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1182:9
     |
1182 |     let mut u128_0: u128 = 9944u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1183:9
     |
1183 |     let mut u128_1: u128 = 5073u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1184:9
     |
1184 |     let mut u128_2: u128 = 3061u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1185:9
     |
1185 |     let mut u128_3: u128 = 5924u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1186:9
     |
1186 |     let mut u128_4: u128 = 5510u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1187:9
     |
1187 |     let mut u128_5: u128 = 6376u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1188:9
     |
1188 |     let mut u128_6: u128 = 3933u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1189:9
     |
1189 |     let mut u128_7: u128 = 2089u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1190:9
     |
1190 |     let mut u128_8: u128 = 6174u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1191:9
     |
1191 |     let mut u128_9: u128 = 6094u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1192:9
     |
1192 |     let mut u128_10: u128 = 134u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1193:9
     |
1193 |     let mut u128_11: u128 = 8024u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1194:9
     |
1194 |     let mut u128_12: u128 = 1027u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1195:9
     |
1195 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1196:9
     |
1196 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1197:9
     |
1197 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1198:9
     |
1198 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1199:9
     |
1199 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1200:9
     |
1200 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1201:9
     |
1201 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1202:9
     |
1202 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1203:9
     |
1203 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1204:9
     |
1204 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1205:9
     |
1205 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1206:9
     |
1206 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1207:9
     |
1207 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1208:9
     |
1208 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1209:9
     |
1209 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1210:9
     |
1210 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1211:9
     |
1211 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1237:13
     |
1237 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1238:13
     |
1238 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1239:13
     |
1239 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1240:13
     |
1240 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `u128_20`
    --> src/udiv128.rs:1241:13
     |
1241 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1242:13
     |
1242 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1243:13
     |
1243 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1244:13
     |
1244 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1245:13
     |
1245 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_21`
    --> src/udiv128.rs:1246:13
     |
1246 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: unused variable: `u128_22`
    --> src/udiv128.rs:1247:13
     |
1247 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_22`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1248:13
     |
1248 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1249:13
     |
1249 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1250:13
     |
1250 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_23`
    --> src/udiv128.rs:1251:13
     |
1251 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_23`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1220:9
     |
1220 |     let mut u128_0: u128 = 9919u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1221:9
     |
1221 |     let mut u128_1: u128 = 2262u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1222:9
     |
1222 |     let mut u128_2: u128 = 6005u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1223:9
     |
1223 |     let mut u128_3: u128 = 9172u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1224:9
     |
1224 |     let mut u128_4: u128 = 3605u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1225:9
     |
1225 |     let mut u128_5: u128 = 8042u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1226:9
     |
1226 |     let mut u128_6: u128 = 2023u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1227:9
     |
1227 |     let mut u128_7: u128 = 4733u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1228:9
     |
1228 |     let mut u128_8: u128 = 5499u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1229:9
     |
1229 |     let mut u128_9: u128 = 5113u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1230:9
     |
1230 |     let mut u128_10: u128 = 8960u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1231:9
     |
1231 |     let mut u128_11: u128 = 6713u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1232:9
     |
1232 |     let mut u128_12: u128 = 4351u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1233:9
     |
1233 |     let mut u128_13: u128 = 2523u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1234:9
     |
1234 |     let mut u128_14: u128 = 4693u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1235:9
     |
1235 |     let mut u128_15: u128 = 3613u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1236:9
     |
1236 |     let mut u128_16: u128 = 3256u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1237:9
     |
1237 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1238:9
     |
1238 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1239:9
     |
1239 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1240:9
     |
1240 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1241:9
     |
1241 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1242:9
     |
1242 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1243:9
     |
1243 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1244:9
     |
1244 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1245:9
     |
1245 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1246:9
     |
1246 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1247:9
     |
1247 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1248:9
     |
1248 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1249:9
     |
1249 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1250:9
     |
1250 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1251:9
     |
1251 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1275:13
     |
1275 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1276:13
     |
1276 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1277:13
     |
1277 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1278:13
     |
1278 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1279:13
     |
1279 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1280:13
     |
1280 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1281:13
     |
1281 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1282:13
     |
1282 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1283:13
     |
1283 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1284:13
     |
1284 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1285:13
     |
1285 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1286:13
     |
1286 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1287:13
     |
1287 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1288:13
     |
1288 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_6`
    --> src/udiv128.rs:1289:13
     |
1289 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1260:9
     |
1260 |     let mut u128_0: u128 = 6519u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1261:9
     |
1261 |     let mut u128_1: u128 = 4862u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1262:9
     |
1262 |     let mut u128_2: u128 = 9811u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1263:9
     |
1263 |     let mut u128_3: u128 = 3288u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1264:9
     |
1264 |     let mut u128_4: u128 = 30u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1265:9
     |
1265 |     let mut u128_5: u128 = 2305u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1266:9
     |
1266 |     let mut u128_6: u128 = 378u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1267:9
     |
1267 |     let mut u128_7: u128 = 5333u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1268:9
     |
1268 |     let mut u128_8: u128 = 5037u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1269:9
     |
1269 |     let mut u128_9: u128 = 8357u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1270:9
     |
1270 |     let mut u128_10: u128 = 3990u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1271:9
     |
1271 |     let mut u128_11: u128 = 803u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1272:9
     |
1272 |     let mut u128_12: u128 = 8219u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1273:9
     |
1273 |     let mut u128_13: u128 = 586u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1274:9
     |
1274 |     let mut u128_14: u128 = 8084u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1275:9
     |
1275 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1276:9
     |
1276 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1277:9
     |
1277 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1278:9
     |
1278 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1279:9
     |
1279 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1280:9
     |
1280 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1281:9
     |
1281 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1282:9
     |
1282 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1283:9
     |
1283 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1284:9
     |
1284 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1285:9
     |
1285 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1286:9
     |
1286 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1287:9
     |
1287 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1288:9
     |
1288 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1289:9
     |
1289 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1312:13
     |
1312 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1313:13
     |
1313 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1314:13
     |
1314 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1315:13
     |
1315 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1316:13
     |
1316 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1317:13
     |
1317 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1318:13
     |
1318 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1319:13
     |
1319 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1320:13
     |
1320 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1321:13
     |
1321 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1322:13
     |
1322 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1323:13
     |
1323 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1324:13
     |
1324 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1325:13
     |
1325 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `tuple_6`
    --> src/udiv128.rs:1326:13
     |
1326 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `tuple_7`
    --> src/udiv128.rs:1327:13
     |
1327 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_7`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1298:9
     |
1298 |     let mut u128_0: u128 = 4984u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1299:9
     |
1299 |     let mut u128_1: u128 = 6728u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1300:9
     |
1300 |     let mut u128_2: u128 = 1973u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1301:9
     |
1301 |     let mut u128_3: u128 = 5856u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1302:9
     |
1302 |     let mut u128_4: u128 = 8094u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1303:9
     |
1303 |     let mut u128_5: u128 = 6292u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1304:9
     |
1304 |     let mut u128_6: u128 = 3425u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1305:9
     |
1305 |     let mut u128_7: u128 = 3223u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1306:9
     |
1306 |     let mut u128_8: u128 = 7707u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1307:9
     |
1307 |     let mut u128_9: u128 = 8105u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1308:9
     |
1308 |     let mut u128_10: u128 = 2497u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1309:9
     |
1309 |     let mut u128_11: u128 = 3177u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1310:9
     |
1310 |     let mut u128_12: u128 = 5244u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1311:9
     |
1311 |     let mut u128_13: u128 = 6965u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1312:9
     |
1312 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1313:9
     |
1313 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1314:9
     |
1314 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1315:9
     |
1315 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1316:9
     |
1316 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1317:9
     |
1317 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1318:9
     |
1318 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1319:9
     |
1319 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1320:9
     |
1320 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1321:9
     |
1321 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1322:9
     |
1322 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1323:9
     |
1323 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1324:9
     |
1324 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1325:9
     |
1325 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1326:9
     |
1326 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1327:9
     |
1327 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1353:13
     |
1353 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_16);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1354:13
     |
1354 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1355:13
     |
1355 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1356:13
     |
1356 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1357:13
     |
1357 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `u128_20`
    --> src/udiv128.rs:1358:13
     |
1358 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `u128_21`
    --> src/udiv128.rs:1359:13
     |
1359 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1360:13
     |
1360 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1361:13
     |
1361 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1362:13
     |
1362 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_22`
    --> src/udiv128.rs:1363:13
     |
1363 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_22`

warning: unused variable: `u128_23`
    --> src/udiv128.rs:1364:13
     |
1364 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_23`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1365:13
     |
1365 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1336:9
     |
1336 |     let mut u128_0: u128 = 4002u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1337:9
     |
1337 |     let mut u128_1: u128 = 3871u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1338:9
     |
1338 |     let mut u128_2: u128 = 8202u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1339:9
     |
1339 |     let mut u128_3: u128 = 584u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1340:9
     |
1340 |     let mut u128_4: u128 = 6576u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1341:9
     |
1341 |     let mut u128_5: u128 = 103u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1342:9
     |
1342 |     let mut u128_6: u128 = 7948u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1343:9
     |
1343 |     let mut u128_7: u128 = 1076u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1344:9
     |
1344 |     let mut u128_8: u128 = 5998u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1345:9
     |
1345 |     let mut u128_9: u128 = 9000u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1346:9
     |
1346 |     let mut u128_10: u128 = 290u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1347:9
     |
1347 |     let mut u128_11: u128 = 9842u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1348:9
     |
1348 |     let mut u128_12: u128 = 2854u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1349:9
     |
1349 |     let mut u128_13: u128 = 2604u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1350:9
     |
1350 |     let mut u128_14: u128 = 715u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1351:9
     |
1351 |     let mut u128_15: u128 = 9387u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1352:9
     |
1352 |     let mut u128_16: u128 = 699u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1353:9
     |
1353 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_16);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1354:9
     |
1354 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1355:9
     |
1355 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1356:9
     |
1356 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1357:9
     |
1357 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1358:9
     |
1358 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1359:9
     |
1359 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1360:9
     |
1360 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1361:9
     |
1361 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1362:9
     |
1362 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1363:9
     |
1363 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1364:9
     |
1364 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1365:9
     |
1365 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1385:13
     |
1385 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1386:13
     |
1386 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1387:13
     |
1387 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1388:13
     |
1388 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1389:13
     |
1389 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_11`
    --> src/udiv128.rs:1390:13
     |
1390 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1391:13
     |
1391 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1392:13
     |
1392 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1393:13
     |
1393 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1394:13
     |
1394 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1395:13
     |
1395 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1396:13
     |
1396 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_12`
    --> src/udiv128.rs:1397:13
     |
1397 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1398:13
     |
1398 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1399:13
     |
1399 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1400:13
     |
1400 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1401:13
     |
1401 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1402:13
     |
1402 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `tuple_6`
    --> src/udiv128.rs:1403:13
     |
1403 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1374:9
     |
1374 |     let mut u128_0: u128 = 6475u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1375:9
     |
1375 |     let mut u128_1: u128 = 995u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1376:9
     |
1376 |     let mut u128_2: u128 = 1619u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1377:9
     |
1377 |     let mut u128_3: u128 = 4704u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1378:9
     |
1378 |     let mut u128_4: u128 = 9544u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1379:9
     |
1379 |     let mut u128_5: u128 = 5278u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1380:9
     |
1380 |     let mut u128_6: u128 = 2765u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1381:9
     |
1381 |     let mut u128_7: u128 = 6545u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1382:9
     |
1382 |     let mut u128_8: u128 = 1479u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1383:9
     |
1383 |     let mut u128_9: u128 = 7013u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1384:9
     |
1384 |     let mut u128_10: u128 = 5148u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1385:9
     |
1385 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1386:9
     |
1386 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1387:9
     |
1387 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1388:9
     |
1388 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1389:9
     |
1389 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1390:9
     |
1390 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1391:9
     |
1391 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1392:9
     |
1392 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1393:9
     |
1393 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1394:9
     |
1394 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1395:9
     |
1395 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1396:9
     |
1396 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1397:9
     |
1397 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1398:9
     |
1398 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1399:9
     |
1399 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1400:9
     |
1400 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1401:9
     |
1401 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1402:9
     |
1402 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1403:9
     |
1403 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1427:13
     |
1427 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1428:13
     |
1428 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1429:13
     |
1429 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1430:13
     |
1430 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1431:13
     |
1431 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1432:13
     |
1432 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1433:13
     |
1433 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1434:13
     |
1434 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1435:13
     |
1435 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1436:13
     |
1436 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1437:13
     |
1437 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1438:13
     |
1438 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1439:13
     |
1439 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1440:13
     |
1440 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1441:13
     |
1441 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `tuple_6`
    --> src/udiv128.rs:1442:13
     |
1442 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1412:9
     |
1412 |     let mut u128_0: u128 = 3156u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1413:9
     |
1413 |     let mut u128_1: u128 = 2384u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1414:9
     |
1414 |     let mut u128_2: u128 = 2058u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1415:9
     |
1415 |     let mut u128_3: u128 = 6700u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1416:9
     |
1416 |     let mut u128_4: u128 = 3820u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1417:9
     |
1417 |     let mut u128_5: u128 = 8191u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1418:9
     |
1418 |     let mut u128_6: u128 = 3055u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1419:9
     |
1419 |     let mut u128_7: u128 = 2054u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1420:9
     |
1420 |     let mut u128_8: u128 = 7513u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1421:9
     |
1421 |     let mut u128_9: u128 = 8524u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1422:9
     |
1422 |     let mut u128_10: u128 = 2180u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1423:9
     |
1423 |     let mut u128_11: u128 = 7036u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1424:9
     |
1424 |     let mut u128_12: u128 = 2386u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1425:9
     |
1425 |     let mut u128_13: u128 = 9140u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1426:9
     |
1426 |     let mut u128_14: u128 = 4873u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1427:9
     |
1427 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1428:9
     |
1428 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1429:9
     |
1429 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1430:9
     |
1430 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1431:9
     |
1431 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1432:9
     |
1432 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1433:9
     |
1433 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1434:9
     |
1434 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1435:9
     |
1435 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1436:9
     |
1436 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1437:9
     |
1437 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1438:9
     |
1438 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1439:9
     |
1439 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1440:9
     |
1440 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1441:9
     |
1441 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1442:9
     |
1442 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1461:13
     |
1461 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1462:13
     |
1462 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1463:13
     |
1463 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1464:13
     |
1464 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1465:13
     |
1465 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1466:13
     |
1466 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1467:13
     |
1467 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1468:13
     |
1468 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1469:13
     |
1469 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_10`
    --> src/udiv128.rs:1470:13
     |
1470 |     let mut u128_10: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_10`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1471:13
     |
1471 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1472:13
     |
1472 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1473:13
     |
1473 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1474:13
     |
1474 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1475:13
     |
1475 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `tuple_6`
    --> src/udiv128.rs:1476:13
     |
1476 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1477:13
     |
1477 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_7`
    --> src/udiv128.rs:1478:13
     |
1478 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_7`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1479:13
     |
1479 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
    --> src/udiv128.rs:1480:13
     |
1480 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1451:9
     |
1451 |     let mut u128_0: u128 = 9768u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1452:9
     |
1452 |     let mut u128_1: u128 = 809u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1453:9
     |
1453 |     let mut u128_2: u128 = 6293u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1454:9
     |
1454 |     let mut u128_3: u128 = 306u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1455:9
     |
1455 |     let mut u128_4: u128 = 9223u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1456:9
     |
1456 |     let mut u128_5: u128 = 2474u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1457:9
     |
1457 |     let mut u128_6: u128 = 2830u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1458:9
     |
1458 |     let mut u128_7: u128 = 9078u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1459:9
     |
1459 |     let mut u128_8: u128 = 9746u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1460:9
     |
1460 |     let mut u128_9: u128 = 5070u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1461:9
     |
1461 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1462:9
     |
1462 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1463:9
     |
1463 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1464:9
     |
1464 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1465:9
     |
1465 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1466:9
     |
1466 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1467:9
     |
1467 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1468:9
     |
1468 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1469:9
     |
1469 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1470:9
     |
1470 |     let mut u128_10: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1471:9
     |
1471 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1472:9
     |
1472 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1473:9
     |
1473 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1474:9
     |
1474 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1475:9
     |
1475 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1476:9
     |
1476 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1477:9
     |
1477 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1478:9
     |
1478 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1479:9
     |
1479 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1480:9
     |
1480 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1501:13
     |
1501 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_12`
    --> src/udiv128.rs:1502:13
     |
1502 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1503:13
     |
1503 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1504:13
     |
1504 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1505:13
     |
1505 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1506:13
     |
1506 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1507:13
     |
1507 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1508:13
     |
1508 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1509:13
     |
1509 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1510:13
     |
1510 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1511:13
     |
1511 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1512:13
     |
1512 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1513:13
     |
1513 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1514:13
     |
1514 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1515:13
     |
1515 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1516:13
     |
1516 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1517:13
     |
1517 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1518:13
     |
1518 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1519:13
     |
1519 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1489:9
     |
1489 |     let mut u128_0: u128 = 1040u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1490:9
     |
1490 |     let mut u128_1: u128 = 3438u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1491:9
     |
1491 |     let mut u128_2: u128 = 6001u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1492:9
     |
1492 |     let mut u128_3: u128 = 38u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1493:9
     |
1493 |     let mut u128_4: u128 = 5106u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1494:9
     |
1494 |     let mut u128_5: u128 = 9418u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1495:9
     |
1495 |     let mut u128_6: u128 = 1100u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1496:9
     |
1496 |     let mut u128_7: u128 = 3542u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1497:9
     |
1497 |     let mut u128_8: u128 = 9888u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1498:9
     |
1498 |     let mut u128_9: u128 = 5753u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1499:9
     |
1499 |     let mut u128_10: u128 = 8061u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1500:9
     |
1500 |     let mut u128_11: u128 = 619u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1501:9
     |
1501 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1502:9
     |
1502 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1503:9
     |
1503 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1504:9
     |
1504 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1505:9
     |
1505 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1506:9
     |
1506 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1507:9
     |
1507 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1508:9
     |
1508 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1509:9
     |
1509 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1510:9
     |
1510 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1511:9
     |
1511 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1512:9
     |
1512 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1513:9
     |
1513 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1514:9
     |
1514 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1515:9
     |
1515 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1516:9
     |
1516 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1517:9
     |
1517 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1518:9
     |
1518 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1519:9
     |
1519 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1542:13
     |
1542 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1543:13
     |
1543 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1544:13
     |
1544 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1545:13
     |
1545 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1546:13
     |
1546 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1547:13
     |
1547 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1548:13
     |
1548 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1549:13
     |
1549 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1550:13
     |
1550 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1551:13
     |
1551 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1552:13
     |
1552 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1553:13
     |
1553 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1554:13
     |
1554 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1555:13
     |
1555 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1556:13
     |
1556 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1557:13
     |
1557 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1528:9
     |
1528 |     let mut u128_0: u128 = 5489u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1529:9
     |
1529 |     let mut u128_1: u128 = 6615u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1530:9
     |
1530 |     let mut u128_2: u128 = 904u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1531:9
     |
1531 |     let mut u128_3: u128 = 9584u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1532:9
     |
1532 |     let mut u128_4: u128 = 1431u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1533:9
     |
1533 |     let mut u128_5: u128 = 3964u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1534:9
     |
1534 |     let mut u128_6: u128 = 908u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1535:9
     |
1535 |     let mut u128_7: u128 = 1100u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1536:9
     |
1536 |     let mut u128_8: u128 = 8697u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1537:9
     |
1537 |     let mut u128_9: u128 = 6828u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1538:9
     |
1538 |     let mut u128_10: u128 = 3792u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1539:9
     |
1539 |     let mut u128_11: u128 = 3351u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1540:9
     |
1540 |     let mut u128_12: u128 = 588u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1541:9
     |
1541 |     let mut u128_13: u128 = 8757u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1542:9
     |
1542 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1543:9
     |
1543 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1544:9
     |
1544 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1545:9
     |
1545 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1546:9
     |
1546 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1547:9
     |
1547 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1548:9
     |
1548 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1549:9
     |
1549 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1550:9
     |
1550 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1551:9
     |
1551 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1552:9
     |
1552 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1553:9
     |
1553 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1554:9
     |
1554 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1555:9
     |
1555 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1556:9
     |
1556 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1557:9
     |
1557 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1583:13
     |
1583 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1584:13
     |
1584 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1585:13
     |
1585 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1586:13
     |
1586 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `u128_20`
    --> src/udiv128.rs:1587:13
     |
1587 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `u128_21`
    --> src/udiv128.rs:1588:13
     |
1588 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1589:13
     |
1589 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1590:13
     |
1590 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_22`
    --> src/udiv128.rs:1591:13
     |
1591 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_22`

warning: unused variable: `u128_23`
    --> src/udiv128.rs:1592:13
     |
1592 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_23`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1593:13
     |
1593 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1594:13
     |
1594 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1595:13
     |
1595 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1566:9
     |
1566 |     let mut u128_0: u128 = 6305u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1567:9
     |
1567 |     let mut u128_1: u128 = 8578u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1568:9
     |
1568 |     let mut u128_2: u128 = 7294u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1569:9
     |
1569 |     let mut u128_3: u128 = 2682u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1570:9
     |
1570 |     let mut u128_4: u128 = 6414u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1571:9
     |
1571 |     let mut u128_5: u128 = 9386u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1572:9
     |
1572 |     let mut u128_6: u128 = 3018u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1573:9
     |
1573 |     let mut u128_7: u128 = 2331u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1574:9
     |
1574 |     let mut u128_8: u128 = 7303u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1575:9
     |
1575 |     let mut u128_9: u128 = 7543u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1576:9
     |
1576 |     let mut u128_10: u128 = 4661u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1577:9
     |
1577 |     let mut u128_11: u128 = 6658u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1578:9
     |
1578 |     let mut u128_12: u128 = 8631u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1579:9
     |
1579 |     let mut u128_13: u128 = 8324u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1580:9
     |
1580 |     let mut u128_14: u128 = 3754u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1581:9
     |
1581 |     let mut u128_15: u128 = 7863u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1582:9
     |
1582 |     let mut u128_16: u128 = 8459u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1583:9
     |
1583 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1584:9
     |
1584 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_14, u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1585:9
     |
1585 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1586:9
     |
1586 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1587:9
     |
1587 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1588:9
     |
1588 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1589:9
     |
1589 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1590:9
     |
1590 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1591:9
     |
1591 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1592:9
     |
1592 |     let mut u128_23: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1593:9
     |
1593 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1594:9
     |
1594 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1595:9
     |
1595 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1617:13
     |
1617 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1618:13
     |
1618 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1619:13
     |
1619 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1620:13
     |
1620 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1621:13
     |
1621 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1622:13
     |
1622 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1623:13
     |
1623 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1624:13
     |
1624 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1625:13
     |
1625 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1626:13
     |
1626 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1627:13
     |
1627 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1628:13
     |
1628 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1629:13
     |
1629 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1630:13
     |
1630 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1631:13
     |
1631 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1632:13
     |
1632 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1633:13
     |
1633 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1634:13
     |
1634 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1635:13
     |
1635 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1604:9
     |
1604 |     let mut u128_0: u128 = 4318u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1605:9
     |
1605 |     let mut u128_1: u128 = 1835u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1606:9
     |
1606 |     let mut u128_2: u128 = 1869u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1607:9
     |
1607 |     let mut u128_3: u128 = 3166u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1608:9
     |
1608 |     let mut u128_4: u128 = 9315u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1609:9
     |
1609 |     let mut u128_5: u128 = 1292u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1610:9
     |
1610 |     let mut u128_6: u128 = 5275u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1611:9
     |
1611 |     let mut u128_7: u128 = 1937u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1612:9
     |
1612 |     let mut u128_8: u128 = 8831u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1613:9
     |
1613 |     let mut u128_9: u128 = 8274u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1614:9
     |
1614 |     let mut u128_10: u128 = 4512u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1615:9
     |
1615 |     let mut u128_11: u128 = 2815u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1616:9
     |
1616 |     let mut u128_12: u128 = 9876u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1617:9
     |
1617 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1618:9
     |
1618 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1619:9
     |
1619 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1620:9
     |
1620 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1621:9
     |
1621 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1622:9
     |
1622 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1623:9
     |
1623 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1624:9
     |
1624 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1625:9
     |
1625 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1626:9
     |
1626 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1627:9
     |
1627 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1628:9
     |
1628 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1629:9
     |
1629 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1630:9
     |
1630 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1631:9
     |
1631 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1632:9
     |
1632 |     let mut buffer_8: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1633:9
     |
1633 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1634:9
     |
1634 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1635:9
     |
1635 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1661:13
     |
1661 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_16);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1662:13
     |
1662 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1663:13
     |
1663 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_15);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1664:13
     |
1664 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1665:13
     |
1665 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1666:13
     |
1666 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1667:13
     |
1667 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1668:13
     |
1668 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1669:13
     |
1669 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: unused variable: `tuple_6`
    --> src/udiv128.rs:1670:13
     |
1670 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_6`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1671:13
     |
1671 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `tuple_7`
    --> src/udiv128.rs:1672:13
     |
1672 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_7`

warning: unused variable: `tuple_8`
    --> src/udiv128.rs:1673:13
     |
1673 |     let mut tuple_8: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_8`

warning: unused variable: `u128_20`
    --> src/udiv128.rs:1674:13
     |
1674 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1644:9
     |
1644 |     let mut u128_0: u128 = 7787u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1645:9
     |
1645 |     let mut u128_1: u128 = 380u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1646:9
     |
1646 |     let mut u128_2: u128 = 8732u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1647:9
     |
1647 |     let mut u128_3: u128 = 4971u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1648:9
     |
1648 |     let mut u128_4: u128 = 9705u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1649:9
     |
1649 |     let mut u128_5: u128 = 1333u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1650:9
     |
1650 |     let mut u128_6: u128 = 197u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1651:9
     |
1651 |     let mut u128_7: u128 = 6092u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1652:9
     |
1652 |     let mut u128_8: u128 = 2044u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1653:9
     |
1653 |     let mut u128_9: u128 = 181u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1654:9
     |
1654 |     let mut u128_10: u128 = 9988u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1655:9
     |
1655 |     let mut u128_11: u128 = 9373u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1656:9
     |
1656 |     let mut u128_12: u128 = 2053u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1657:9
     |
1657 |     let mut u128_13: u128 = 569u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1658:9
     |
1658 |     let mut u128_14: u128 = 9678u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1659:9
     |
1659 |     let mut u128_15: u128 = 666u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1660:9
     |
1660 |     let mut u128_16: u128 = 4030u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1661:9
     |
1661 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_16);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1662:9
     |
1662 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1663:9
     |
1663 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_15);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1664:9
     |
1664 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1665:9
     |
1665 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1666:9
     |
1666 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1667:9
     |
1667 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1668:9
     |
1668 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1669:9
     |
1669 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1670:9
     |
1670 |     let mut tuple_6: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1671:9
     |
1671 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1672:9
     |
1672 |     let mut tuple_7: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1673:9
     |
1673 |     let mut tuple_8: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1674:9
     |
1674 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1691:13
     |
1691 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1692:13
     |
1692 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1693:13
     |
1693 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1694:13
     |
1694 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1695:13
     |
1695 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1696:13
     |
1696 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1697:13
     |
1697 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_8`
    --> src/udiv128.rs:1698:13
     |
1698 |     let mut u128_8: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_8`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1699:13
     |
1699 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_9`
    --> src/udiv128.rs:1700:13
     |
1700 |     let mut u128_9: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_9`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1701:13
     |
1701 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1702:13
     |
1702 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1703:13
     |
1703 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `buffer_10`
    --> src/udiv128.rs:1704:13
     |
1704 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
    --> src/udiv128.rs:1705:13
     |
1705 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1706:13
     |
1706 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_12`
    --> src/udiv128.rs:1707:13
     |
1707 |     let mut buffer_12: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_12`

warning: unused variable: `buffer_13`
    --> src/udiv128.rs:1708:13
     |
1708 |     let mut buffer_13: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_13`

warning: unused variable: `buffer_14`
    --> src/udiv128.rs:1709:13
     |
1709 |     let mut buffer_14: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_14`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1710:13
     |
1710 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1711:13
     |
1711 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_15`
    --> src/udiv128.rs:1712:13
     |
1712 |     let mut buffer_15: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_15`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1683:9
     |
1683 |     let mut u128_0: u128 = 5132u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1684:9
     |
1684 |     let mut u128_1: u128 = 1606u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1685:9
     |
1685 |     let mut u128_2: u128 = 1891u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1686:9
     |
1686 |     let mut u128_3: u128 = 8151u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1687:9
     |
1687 |     let mut u128_4: u128 = 667u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1688:9
     |
1688 |     let mut u128_5: u128 = 1751u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1689:9
     |
1689 |     let mut u128_6: u128 = 3674u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1690:9
     |
1690 |     let mut u128_7: u128 = 8043u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1691:9
     |
1691 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1692:9
     |
1692 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1693:9
     |
1693 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1694:9
     |
1694 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1695:9
     |
1695 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1696:9
     |
1696 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1697:9
     |
1697 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1698:9
     |
1698 |     let mut u128_8: u128 = crate::udiv128::u128_mulhi(u128_6, u128_5);
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1699:9
     |
1699 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1700:9
     |
1700 |     let mut u128_9: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1701:9
     |
1701 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1702:9
     |
1702 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1703:9
     |
1703 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1704:9
     |
1704 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1705:9
     |
1705 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1706:9
     |
1706 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1707:9
     |
1707 |     let mut buffer_12: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1708:9
     |
1708 |     let mut buffer_13: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1709:9
     |
1709 |     let mut buffer_14: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1710:9
     |
1710 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1711:9
     |
1711 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1712:9
     |
1712 |     let mut buffer_15: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1731:13
     |
1731 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1732:13
     |
1732 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1733:13
     |
1733 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_10`
    --> src/udiv128.rs:1734:13
     |
1734 |     let mut u128_10: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_10`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1735:13
     |
1735 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1736:13
     |
1736 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1737:13
     |
1737 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1738:13
     |
1738 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1739:13
     |
1739 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1740:13
     |
1740 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1741:13
     |
1741 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1742:13
     |
1742 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1743:13
     |
1743 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `u128_11`
    --> src/udiv128.rs:1744:13
     |
1744 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_11`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1745:13
     |
1745 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_10`
    --> src/udiv128.rs:1746:13
     |
1746 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `buffer_11`
    --> src/udiv128.rs:1747:13
     |
1747 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1748:13
     |
1748 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_12`
    --> src/udiv128.rs:1749:13
     |
1749 |     let mut buffer_12: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_12`

warning: unused variable: `buffer_13`
    --> src/udiv128.rs:1750:13
     |
1750 |     let mut buffer_13: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_13`

warning: unused variable: `u128_12`
    --> src/udiv128.rs:1751:13
     |
1751 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1721:9
     |
1721 |     let mut u128_0: u128 = 1149u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1722:9
     |
1722 |     let mut u128_1: u128 = 2930u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1723:9
     |
1723 |     let mut u128_2: u128 = 4102u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1724:9
     |
1724 |     let mut u128_3: u128 = 1511u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1725:9
     |
1725 |     let mut u128_4: u128 = 9147u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1726:9
     |
1726 |     let mut u128_5: u128 = 3936u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1727:9
     |
1727 |     let mut u128_6: u128 = 2980u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1728:9
     |
1728 |     let mut u128_7: u128 = 5617u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1729:9
     |
1729 |     let mut u128_8: u128 = 3442u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1730:9
     |
1730 |     let mut u128_9: u128 = 8545u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1731:9
     |
1731 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1732:9
     |
1732 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1733:9
     |
1733 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1734:9
     |
1734 |     let mut u128_10: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1735:9
     |
1735 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1736:9
     |
1736 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1737:9
     |
1737 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1738:9
     |
1738 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1739:9
     |
1739 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1740:9
     |
1740 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1741:9
     |
1741 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1742:9
     |
1742 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1743:9
     |
1743 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1744:9
     |
1744 |     let mut u128_11: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1745:9
     |
1745 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1746:9
     |
1746 |     let mut buffer_10: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1747:9
     |
1747 |     let mut buffer_11: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1748:9
     |
1748 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1749:9
     |
1749 |     let mut buffer_12: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1750:9
     |
1750 |     let mut buffer_13: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1751:9
     |
1751 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1773:13
     |
1773 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1774:13
     |
1774 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1775:13
     |
1775 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1776:13
     |
1776 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1777:13
     |
1777 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1778:13
     |
1778 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1779:13
     |
1779 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1780:13
     |
1780 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1781:13
     |
1781 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1782:13
     |
1782 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1783:13
     |
1783 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1784:13
     |
1784 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1785:13
     |
1785 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1786:13
     |
1786 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1787:13
     |
1787 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1788:13
     |
1788 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1789:13
     |
1789 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1760:9
     |
1760 |     let mut u128_0: u128 = 7144u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1761:9
     |
1761 |     let mut u128_1: u128 = 9581u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1762:9
     |
1762 |     let mut u128_2: u128 = 1468u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1763:9
     |
1763 |     let mut u128_3: u128 = 8929u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1764:9
     |
1764 |     let mut u128_4: u128 = 5544u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1765:9
     |
1765 |     let mut u128_5: u128 = 2537u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1766:9
     |
1766 |     let mut u128_6: u128 = 889u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1767:9
     |
1767 |     let mut u128_7: u128 = 9740u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1768:9
     |
1768 |     let mut u128_8: u128 = 533u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1769:9
     |
1769 |     let mut u128_9: u128 = 2727u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1770:9
     |
1770 |     let mut u128_10: u128 = 4612u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1771:9
     |
1771 |     let mut u128_11: u128 = 3599u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1772:9
     |
1772 |     let mut u128_12: u128 = 6259u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1773:9
     |
1773 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1774:9
     |
1774 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1775:9
     |
1775 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1776:9
     |
1776 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_12, u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1777:9
     |
1777 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1778:9
     |
1778 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1779:9
     |
1779 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1780:9
     |
1780 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1781:9
     |
1781 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1782:9
     |
1782 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1783:9
     |
1783 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1784:9
     |
1784 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1785:9
     |
1785 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1786:9
     |
1786 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1787:9
     |
1787 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1788:9
     |
1788 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1789:9
     |
1789 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1815:13
     |
1815 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1816:13
     |
1816 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1817:13
     |
1817 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1818:13
     |
1818 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1819:13
     |
1819 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1820:13
     |
1820 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1821:13
     |
1821 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1822:13
     |
1822 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `u128_20`
    --> src/udiv128.rs:1823:13
     |
1823 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1824:13
     |
1824 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1825:13
     |
1825 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_21`
    --> src/udiv128.rs:1826:13
     |
1826 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1827:13
     |
1827 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `u128_22`
    --> src/udiv128.rs:1828:13
     |
1828 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_22`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1798:9
     |
1798 |     let mut u128_0: u128 = 1648u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1799:9
     |
1799 |     let mut u128_1: u128 = 4680u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1800:9
     |
1800 |     let mut u128_2: u128 = 8176u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1801:9
     |
1801 |     let mut u128_3: u128 = 4595u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1802:9
     |
1802 |     let mut u128_4: u128 = 4709u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1803:9
     |
1803 |     let mut u128_5: u128 = 1930u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1804:9
     |
1804 |     let mut u128_6: u128 = 601u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1805:9
     |
1805 |     let mut u128_7: u128 = 3326u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1806:9
     |
1806 |     let mut u128_8: u128 = 8428u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1807:9
     |
1807 |     let mut u128_9: u128 = 6899u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1808:9
     |
1808 |     let mut u128_10: u128 = 2372u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1809:9
     |
1809 |     let mut u128_11: u128 = 9145u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1810:9
     |
1810 |     let mut u128_12: u128 = 8759u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1811:9
     |
1811 |     let mut u128_13: u128 = 3054u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1812:9
     |
1812 |     let mut u128_14: u128 = 6880u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1813:9
     |
1813 |     let mut u128_15: u128 = 9136u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1814:9
     |
1814 |     let mut u128_16: u128 = 6866u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1815:9
     |
1815 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_16, u128_15);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1816:9
     |
1816 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_14);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1817:9
     |
1817 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1818:9
     |
1818 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1819:9
     |
1819 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1820:9
     |
1820 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1821:9
     |
1821 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1822:9
     |
1822 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_9, u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1823:9
     |
1823 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1824:9
     |
1824 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1825:9
     |
1825 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1826:9
     |
1826 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1827:9
     |
1827 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1828:9
     |
1828 |     let mut u128_22: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1849:13
     |
1849 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1850:13
     |
1850 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1851:13
     |
1851 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1852:13
     |
1852 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1853:13
     |
1853 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1854:13
     |
1854 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1855:13
     |
1855 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_12`
    --> src/udiv128.rs:1856:13
     |
1856 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1857:13
     |
1857 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1858:13
     |
1858 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1859:13
     |
1859 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1860:13
     |
1860 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1861:13
     |
1861 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1862:13
     |
1862 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1863:13
     |
1863 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_10`
    --> src/udiv128.rs:1864:13
     |
1864 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_10`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1865:13
     |
1865 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1866:13
     |
1866 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_11`
    --> src/udiv128.rs:1867:13
     |
1867 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_11`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1868:13
     |
1868 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1837:9
     |
1837 |     let mut u128_0: u128 = 5297u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1838:9
     |
1838 |     let mut u128_1: u128 = 6963u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1839:9
     |
1839 |     let mut u128_2: u128 = 1950u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1840:9
     |
1840 |     let mut u128_3: u128 = 6776u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1841:9
     |
1841 |     let mut u128_4: u128 = 44u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1842:9
     |
1842 |     let mut u128_5: u128 = 3443u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1843:9
     |
1843 |     let mut u128_6: u128 = 9227u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1844:9
     |
1844 |     let mut u128_7: u128 = 7218u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1845:9
     |
1845 |     let mut u128_8: u128 = 3328u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1846:9
     |
1846 |     let mut u128_9: u128 = 514u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1847:9
     |
1847 |     let mut u128_10: u128 = 1163u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1848:9
     |
1848 |     let mut u128_11: u128 = 3643u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1849:9
     |
1849 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1850:9
     |
1850 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1851:9
     |
1851 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1852:9
     |
1852 |     let mut buffer_3: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1853:9
     |
1853 |     let mut buffer_4: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1854:9
     |
1854 |     let mut buffer_5: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1855:9
     |
1855 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1856:9
     |
1856 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1857:9
     |
1857 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1858:9
     |
1858 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1859:9
     |
1859 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1860:9
     |
1860 |     let mut buffer_7: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1861:9
     |
1861 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1862:9
     |
1862 |     let mut buffer_9: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1863:9
     |
1863 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_5, u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1864:9
     |
1864 |     let mut buffer_10: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1865:9
     |
1865 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1866:9
     |
1866 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1867:9
     |
1867 |     let mut buffer_11: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1868:9
     |
1868 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1891:13
     |
1891 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1892:13
     |
1892 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1893:13
     |
1893 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1894:13
     |
1894 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1895:13
     |
1895 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1896:13
     |
1896 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1897:13
     |
1897 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_4`
    --> src/udiv128.rs:1898:13
     |
1898 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_4`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1899:13
     |
1899 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1900:13
     |
1900 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1901:13
     |
1901 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1902:13
     |
1902 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1903:13
     |
1903 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1904:13
     |
1904 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1905:13
     |
1905 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1906:13
     |
1906 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_5`
    --> src/udiv128.rs:1907:13
     |
1907 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_5`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1877:9
     |
1877 |     let mut u128_0: u128 = 6035u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1878:9
     |
1878 |     let mut u128_1: u128 = 350u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1879:9
     |
1879 |     let mut u128_2: u128 = 3976u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1880:9
     |
1880 |     let mut u128_3: u128 = 4488u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1881:9
     |
1881 |     let mut u128_4: u128 = 1587u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1882:9
     |
1882 |     let mut u128_5: u128 = 678u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1883:9
     |
1883 |     let mut u128_6: u128 = 2022u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1884:9
     |
1884 |     let mut u128_7: u128 = 4125u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1885:9
     |
1885 |     let mut u128_8: u128 = 4353u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1886:9
     |
1886 |     let mut u128_9: u128 = 2974u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1887:9
     |
1887 |     let mut u128_10: u128 = 4986u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1888:9
     |
1888 |     let mut u128_11: u128 = 3073u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1889:9
     |
1889 |     let mut u128_12: u128 = 7407u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1890:9
     |
1890 |     let mut u128_13: u128 = 9394u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1891:9
     |
1891 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_13);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1892:9
     |
1892 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1893:9
     |
1893 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_11, u128_10);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1894:9
     |
1894 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1895:9
     |
1895 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1896:9
     |
1896 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1897:9
     |
1897 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1898:9
     |
1898 |     let mut tuple_4: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1899:9
     |
1899 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1900:9
     |
1900 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1901:9
     |
1901 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1902:9
     |
1902 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1903:9
     |
1903 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1904:9
     |
1904 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1905:9
     |
1905 |     let mut buffer_6: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1906:9
     |
1906 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_2, u128_1);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1907:9
     |
1907 |     let mut tuple_5: (u128, u64) = crate::udiv128::udivmod_1e19(u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `u128_16`
    --> src/udiv128.rs:1932:13
     |
1932 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_16`

warning: unused variable: `u128_17`
    --> src/udiv128.rs:1933:13
     |
1933 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_17`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1934:13
     |
1934 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `u128_18`
    --> src/udiv128.rs:1935:13
     |
1935 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_18`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1936:13
     |
1936 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1937:13
     |
1937 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1938:13
     |
1938 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_19`
    --> src/udiv128.rs:1939:13
     |
1939 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_19`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1940:13
     |
1940 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1941:13
     |
1941 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `u128_20`
    --> src/udiv128.rs:1942:13
     |
1942 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_20`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1943:13
     |
1943 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1944:13
     |
1944 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `u128_21`
    --> src/udiv128.rs:1945:13
     |
1945 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_21`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1916:9
     |
1916 |     let mut u128_0: u128 = 7350u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1917:9
     |
1917 |     let mut u128_1: u128 = 6794u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1918:9
     |
1918 |     let mut u128_2: u128 = 5206u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1919:9
     |
1919 |     let mut u128_3: u128 = 3128u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1920:9
     |
1920 |     let mut u128_4: u128 = 7400u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1921:9
     |
1921 |     let mut u128_5: u128 = 1831u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1922:9
     |
1922 |     let mut u128_6: u128 = 1905u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1923:9
     |
1923 |     let mut u128_7: u128 = 6048u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1924:9
     |
1924 |     let mut u128_8: u128 = 2511u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1925:9
     |
1925 |     let mut u128_9: u128 = 3443u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1926:9
     |
1926 |     let mut u128_10: u128 = 2913u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1927:9
     |
1927 |     let mut u128_11: u128 = 3464u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1928:9
     |
1928 |     let mut u128_12: u128 = 8444u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1929:9
     |
1929 |     let mut u128_13: u128 = 3969u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1930:9
     |
1930 |     let mut u128_14: u128 = 8652u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1931:9
     |
1931 |     let mut u128_15: u128 = 6334u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1932:9
     |
1932 |     let mut u128_16: u128 = crate::udiv128::u128_mulhi(u128_15, u128_14);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1933:9
     |
1933 |     let mut u128_17: u128 = crate::udiv128::u128_mulhi(u128_13, u128_12);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1934:9
     |
1934 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1935:9
     |
1935 |     let mut u128_18: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1936:9
     |
1936 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_8);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1937:9
     |
1937 |     let mut buffer_0: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1938:9
     |
1938 |     let mut buffer_1: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1939:9
     |
1939 |     let mut u128_19: u128 = crate::udiv128::u128_mulhi(u128_7, u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1940:9
     |
1940 |     let mut buffer_2: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1941:9
     |
1941 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1942:9
     |
1942 |     let mut u128_20: u128 = crate::udiv128::u128_mulhi(u128_4, u128_3);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1943:9
     |
1943 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1944:9
     |
1944 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1945:9
     |
1945 |     let mut u128_21: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: unused variable: `buffer_0`
    --> src/udiv128.rs:1966:13
     |
1966 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_0`

warning: unused variable: `tuple_0`
    --> src/udiv128.rs:1967:13
     |
1967 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_0`

warning: unused variable: `buffer_1`
    --> src/udiv128.rs:1968:13
     |
1968 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_1`

warning: unused variable: `u128_12`
    --> src/udiv128.rs:1969:13
     |
1969 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_12`

warning: unused variable: `buffer_2`
    --> src/udiv128.rs:1970:13
     |
1970 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_2`

warning: unused variable: `u128_13`
    --> src/udiv128.rs:1971:13
     |
1971 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_13`

warning: unused variable: `buffer_3`
    --> src/udiv128.rs:1972:13
     |
1972 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_3`

warning: unused variable: `buffer_4`
    --> src/udiv128.rs:1973:13
     |
1973 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_4`

warning: unused variable: `buffer_5`
    --> src/udiv128.rs:1974:13
     |
1974 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_5`

warning: unused variable: `buffer_6`
    --> src/udiv128.rs:1975:13
     |
1975 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_6`

warning: unused variable: `buffer_7`
    --> src/udiv128.rs:1976:13
     |
1976 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_7`

warning: unused variable: `tuple_1`
    --> src/udiv128.rs:1977:13
     |
1977 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_1`

warning: unused variable: `tuple_2`
    --> src/udiv128.rs:1978:13
     |
1978 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_2`

warning: unused variable: `tuple_3`
    --> src/udiv128.rs:1979:13
     |
1979 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tuple_3`

warning: unused variable: `u128_14`
    --> src/udiv128.rs:1980:13
     |
1980 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_14`

warning: unused variable: `buffer_8`
    --> src/udiv128.rs:1981:13
     |
1981 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_8`

warning: unused variable: `u128_15`
    --> src/udiv128.rs:1982:13
     |
1982 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_u128_15`

warning: unused variable: `buffer_9`
    --> src/udiv128.rs:1983:13
     |
1983 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_buffer_9`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1954:9
     |
1954 |     let mut u128_0: u128 = 3397u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1955:9
     |
1955 |     let mut u128_1: u128 = 7974u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1956:9
     |
1956 |     let mut u128_2: u128 = 8687u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1957:9
     |
1957 |     let mut u128_3: u128 = 9360u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1958:9
     |
1958 |     let mut u128_4: u128 = 7436u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1959:9
     |
1959 |     let mut u128_5: u128 = 8156u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1960:9
     |
1960 |     let mut u128_6: u128 = 3290u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1961:9
     |
1961 |     let mut u128_7: u128 = 9431u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1962:9
     |
1962 |     let mut u128_8: u128 = 9362u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1963:9
     |
1963 |     let mut u128_9: u128 = 7373u128;
     |         ----^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1964:9
     |
1964 |     let mut u128_10: u128 = 3639u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1965:9
     |
1965 |     let mut u128_11: u128 = 194u128;
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1966:9
     |
1966 |     let mut buffer_0: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1967:9
     |
1967 |     let mut tuple_0: (u128, u64) = crate::udiv128::udivmod_1e19(u128_11);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1968:9
     |
1968 |     let mut buffer_1: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1969:9
     |
1969 |     let mut u128_12: u128 = crate::udiv128::u128_mulhi(u128_10, u128_9);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1970:9
     |
1970 |     let mut buffer_2: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1971:9
     |
1971 |     let mut u128_13: u128 = crate::udiv128::u128_mulhi(u128_8, u128_7);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1972:9
     |
1972 |     let mut buffer_3: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1973:9
     |
1973 |     let mut buffer_4: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1974:9
     |
1974 |     let mut buffer_5: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1975:9
     |
1975 |     let mut buffer_6: crate::Buffer = crate::Buffer::default();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1976:9
     |
1976 |     let mut buffer_7: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1977:9
     |
1977 |     let mut tuple_1: (u128, u64) = crate::udiv128::udivmod_1e19(u128_6);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1978:9
     |
1978 |     let mut tuple_2: (u128, u64) = crate::udiv128::udivmod_1e19(u128_5);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1979:9
     |
1979 |     let mut tuple_3: (u128, u64) = crate::udiv128::udivmod_1e19(u128_4);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1980:9
     |
1980 |     let mut u128_14: u128 = crate::udiv128::u128_mulhi(u128_3, u128_2);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1981:9
     |
1981 |     let mut buffer_8: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1982:9
     |
1982 |     let mut u128_15: u128 = crate::udiv128::u128_mulhi(u128_1, u128_0);
     |         ----^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> src/udiv128.rs:1983:9
     |
1983 |     let mut buffer_9: crate::Buffer = crate::Buffer::new();
     |         ----^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: fields `connection` and `redis_db` are never read
  --> src/rusty_monitor.rs:90:5
   |
89 | struct Monitor {
   |        ------- fields in this struct
90 |     connection: redis::Connection,
   |     ^^^^^^^^^^
91 |     test_id: u64,
92 |     redis_db: String
   |     ^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: methods `trace_fn`, `trace_branch`, and `clear` are never used
   --> src/rusty_monitor.rs:103:19
    |
98  | impl Monitor {
    | ------------ methods in this implementation
...
103 |     pub(crate) fn trace_fn(&mut self, run: u64, global_id: &str) {
    |                   ^^^^^^^^
...
113 |     pub(crate) fn trace_branch(&mut self, run: u64, global_id: &str, block: u64, dist: f64) {
    |                   ^^^^^^^^^^^^
...
123 |     fn clear(&self, connection: &mut Connection) {
    |        ^^^^^

warning: `itoa` (lib test) generated 2415 warnings (22 duplicates) (run `cargo fix --lib -p itoa --tests` to apply 1533 suggestions)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 4.70s
warning: the following packages contain code that will be rejected by a future version of Rust: redis v0.11.0
note: to see what the problems were, use the option `--future-incompat-report`, or run `cargo report future-incompatibilities --id 1`
     Running unittests src/lib.rs (target/debug/deps/itoa-7e64c9f75f99e6f9)
     Running tests/test.rs (target/debug/deps/test-65b7c22a1201cdc2)
